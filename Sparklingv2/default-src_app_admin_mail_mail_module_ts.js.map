{"version":3,"file":"default-src_app_admin_mail_mail_module_ts.js","mappings":"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","sources":["./src/app/admin/mail/mail-routing.module.ts","./src/app/admin/mail/mail.module.ts","./src/app/admin/mail/textarea/textarea.component.ts","./src/app/admin/mail/textarea/textarea.component.html","./src/app/admin/mail/thread/thread.component.ts","./src/app/admin/mail/thread/thread.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MailRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MailRoutingModule } from './mail-routing.module';\r\nimport { ThreadComponent } from './thread/thread.component';\r\nimport { TextareaComponent } from './textarea/textarea.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ThreadComponent,\r\n    TextareaComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MailRoutingModule,\r\n    SharedModule\r\n  ],\r\n  exports: [\r\n    ThreadComponent,\r\n    TextareaComponent\r\n  ]\r\n})\r\nexport class MailModule { }\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\r\nimport { FileService } from 'src/app/shared/services/client/file.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { throwError } from 'rxjs'\r\nimport { catchError, tap } from 'rxjs/operators'\r\nimport { ScriptsService } from 'src/app/shared/services/client/scripts.service';\r\nimport { DeviceService } from 'src/app/shared/services/client/device.service';\r\n@Component({\r\n  selector: 'app-mail-textarea',\r\n  templateUrl: './textarea.component.html',\r\n  styleUrls: ['./textarea.component.scss']\r\n})\r\nexport class TextareaComponent implements OnInit {\r\n  @Output('uploadedEvent') uploadedEvent: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output('sendEvent') sendEvent: EventEmitter<any> = new EventEmitter<any>();\r\n  @Input('uploaded') uploaded: any[] = [];\r\n  @Input('data') data:any = null;\r\n  @Input('id') id:any = null;\r\n  @Input('config') config: AngularEditorConfig = {\r\n    editable: true,\r\n    spellcheck: true,\r\n    height: 'auto',\r\n    minHeight: '50',\r\n    maxHeight: 'auto',\r\n    width: 'auto',\r\n    minWidth: '0',\r\n    translate: 'yes',\r\n    enableToolbar: true,\r\n    showToolbar: true,\r\n    placeholder: 'Enter text here...',\r\n    defaultParagraphSeparator: '',\r\n    defaultFontName: '',\r\n    defaultFontSize: '',\r\n    fonts: [\r\n      { class: 'arial', name: 'Arial' },\r\n      { class: 'times-new-roman', name: 'Times New Roman' },\r\n      { class: 'calibri', name: 'Calibri' },\r\n      { class: 'comic-sans-ms', name: 'Comic Sans MS' }\r\n    ],\r\n    customClasses: [\r\n      {\r\n        name: 'quote',\r\n        class: 'quote',\r\n      },\r\n      {\r\n        name: 'redText',\r\n        class: 'redText'\r\n      },\r\n      {\r\n        name: 'titleText',\r\n        class: 'titleText',\r\n        tag: 'h1',\r\n      },\r\n    ],\r\n    uploadUrl: `${environment.uploadApi}/upload`,\r\n    upload: (file: File) => {\r\n\r\n      let formData = new FormData();\r\n      formData.append('file', file, file.name)\r\n      return this._fs.upload(formData)\r\n        .pipe(\r\n          catchError((err: any) => {\r\n\r\n            return throwError(err);\r\n          }),\r\n          tap((res:any)=>{\r\n\r\n            res.status = 'Yet';\r\n            this.uploaded.unshift(res);\r\n            let today = new Date(Date.now());\r\n            let _data = {\r\n              ...this.newMessage,\r\n              ...res,\r\n              created_at:today,\r\n              updated_at:today,\r\n              code:`${this.id}-at-${today.getMilliseconds()}-file-${this.ss.generateRandomAlphanumeric(5)}`\r\n            }\r\n            this.uploadedEvent.emit(_data);\r\n            this.data = '';\r\n            this.reset();\r\n            // this.newJobApplication.responsibility += `<a href=\"${res.file}\" target=\"__blank\">${res.fileName}</a><br>`\r\n            // this.newJobApplication.description += `<a href=\"${res.file}\" target=\"__blank\">${res.fileName}</a><br>`\r\n\r\n          })\r\n        );\r\n      },\r\n    uploadWithCredentials: false,\r\n    sanitize: true,\r\n    toolbarPosition: 'top',\r\n    toolbarHiddenButtons: [\r\n      ['bold', 'italic'],\r\n      ['fontSize']\r\n    ]\r\n  };\r\n  newMessage: any = {\r\n    content: null,\r\n    status: 'Yet',\r\n    code: `${this.ss.generateRandomAlphanumeric(10)}`,\r\n    file: null,\r\n    sender:null,\r\n    recipient:null,\r\n    dir:null,\r\n    message:null,\r\n    fileName:null,\r\n    serverLocation:null,\r\n    uploadPath:null,\r\n    created_at:  '',\r\n    updated_at: ''\r\n  }\r\n  constructor(private _fs: FileService, private ss: ScriptsService, private _ds: DeviceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  send(){\r\n    if(this.data){\r\n      let today = new Date(Date.now());\r\n      let _data = {\r\n        ...this.newMessage,\r\n        created_at:today,\r\n        updated_at:today,\r\n        code:`${this.id}-at-${today.getMilliseconds()}`,\r\n        status:'Sending',\r\n        content: this.data,\r\n      }\r\n      this.sendEvent.emit(_data);\r\n      this.data = null;\r\n      this.reset()\r\n    }else{\r\n      this._ds.oInfoNotification('Empty Message', 'Message content cannot  be empty');\r\n    }\r\n\r\n\r\n  }\r\n  reset(){\r\n    this.newMessage = {\r\n      content: null,\r\n      status: 'Yet',\r\n      code: `${this.id}-at-${this.ss.generateRandomAlphanumeric(10)}`,\r\n      file: null,\r\n      sender:null,\r\n      recipient:null,\r\n      dir:null,\r\n      message:null,\r\n      fileName:null,\r\n      serverLocation:null,\r\n      uploadPath:null,\r\n      created_at:  '',\r\n      updated_at: ''\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <angular-editor [config]=\"config\" id=\"{{id}}\" [placeholder]=\"'Type nmessge...'\"\r\n                [(ngModel)]=\"data\"></angular-editor>\r\n        </div>\r\n        <div class=\"col-md-12 text-right pt-2\">\r\n            <div class=\"container\">\r\n                <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\r\n                    <label class=\"btn btn-outline-primary active\" style=\"background: transparent;\" (change)=\"send()\">\r\n                        <input type=\"checkbox\" name=\"options\" id=\"{{id}}option1\" autocomplete=\"off\" checked=\"\">\r\n                        <a href=\"javascript:void(0)\" class=\"mr-2\"><i class=\"fa fa-paperclip\"></i></a>\r\n                    </label>\r\n                    <label class=\"btn btn-primary\" *ngIf=\"config.showToolbar\" (change)=\"config.showToolbar = !config.showToolbar\">\r\n                        <input type=\"checkbox\" name=\"options\" id=\"{{id}}option2\" autocomplete=\"off\">\r\n                        <i class=\"icon-copy bi bi-layer-forward\"></i>\r\n                    </label>\r\n                    <label class=\"btn btn-primary\" *ngIf=\"!config.showToolbar\" (change)=\"config.showToolbar = !config.showToolbar\">\r\n                        <input type=\"checkbox\" name=\"options\" id=\"{{id}}option4\" autocomplete=\"off\">\r\n                        <i class=\"icon-copy bi bi-keyboard\"></i>\r\n                    </label>\r\n                    <label class=\"btn btn-success\" (change)=\"send()\">\r\n                        <input type=\"checkbox\" name=\"options\" id=\"{{id}}option3\" autocomplete=\"off\">\r\n                        <i class=\"icon-copy ion-paper-airplane\"></i>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- <div class=\"col-md-6 pt-2\">\r\n            <div class=\"container\">\r\n                <button class=\"btn btn-block btn-success\" type=\"button\" (click)=\"send()\">\r\n                    <i class=\"icon-copy ion-paper-airplane\"></i>\r\n                </button>\r\n            </div>\r\n        </div> -->\r\n    </div>\r\n</div>","import { Component, OnInit, Input, AfterViewInit } from '@angular/core';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, shareReplay, switchMap, tap } from 'rxjs/operators';\r\nimport { Message } from 'src/app/shared/models/Message';\r\nimport { DeviceService } from 'src/app/shared/services/client/device.service';\r\ndeclare const $:any;\r\n@Component({\r\n  selector: 'app-mail-thread',\r\n  templateUrl: './thread.component.html',\r\n  styleUrls: ['./thread.component.scss']\r\n})\r\nexport class ThreadComponent implements OnInit, AfterViewInit {\r\n  @Input('recipient') recipient: any = null;\r\n  @Input('me') me: any = null;\r\n  messages: any[] = [];\r\n  constructor(private _ds: DeviceService) { }\r\n  ngAfterViewInit(): void {\r\n    this.gotoBottom();\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    let existinglistv = this._ds._conversations.value.get(this.recipient.code);\r\n    if (existinglistv) {\r\n      this.messages = existinglistv;\r\n    }\r\n    this._ds.getMailConversationThread({ recipient: this.recipient.code, sender: this.me.code, _sort: \"created_at\", _order: 'asc', _limit: 500 }).subscribe(\r\n      messages=>{\r\n        let existinglistv = this._ds._conversations.value;\r\n        existinglistv.set(this.recipient.code, messages);\r\n        this._ds._conversations.next(existinglistv);\r\n        // this.messages = messages;\r\n      }\r\n    )\r\n  }\r\n  uploadedEventHandler(event: any) {\r\n    event.sender = this.me.code;\r\n    event.recipient = this.recipient.code;\r\n    event.mail = null;\r\n    let mail = {\r\n      from: this.me.email, //replace with your email\r\n      to: this.recipient.email,\r\n      subject: `New Message from ${this.me.firstName} via zinder`,\r\n      html: null,\r\n      innerBody: event.content,\r\n    }\r\n    if (this.isHtml(event.content)) {\r\n      mail.html = event.content;\r\n    }\r\n    this._ds.mail(mail)\r\n      .pipe(\r\n        catchError((e: any) => {\r\n\r\n          return throwError(e);\r\n        })\r\n      )\r\n      .subscribe( )\r\n\r\n      this.messages.push(event);\r\n\r\n    }\r\n  sendEventHandler(event: any) {\r\n    event.sender = this.me.code;\r\n    event.recipient = this.recipient.code;\r\n    event.status = 'Sent';\r\n    event.mail = null;\r\n    let mail = {\r\n      from: this.me.email, //replace with your email\r\n      to: this.recipient.email,\r\n      subject: `New Message from ${this.me.firstName} via zinder messanger`,\r\n      html: null,\r\n      innerBody: event.content,\r\n    }\r\n    if (this.isHtml(event.content)) {\r\n      mail.html = event.content;\r\n    }\r\n    this._ds.sendMessage(event).pipe(\r\n      switchMap((res: any) => {\r\n\r\n        if (res.id) {\r\n          this.updateFeed(res);\r\n          return this._ds.mail(mail)\r\n            .pipe(\r\n              switchMap((_res: any) => {\r\n\r\n                if (_res.created_at) {\r\n                  res.mail = _res;\r\n                  res.status = 'Delivered';\r\n                  this.updateFeed(res);\r\n                  res.status = 'Unseen';\r\n                  return this._ds.updateMessage(res)\r\n                    .pipe(\r\n                      catchError((e: any) => {\r\n\r\n                        return throwError(\r\n                          new Error('Update Error')\r\n                        );\r\n                      })\r\n                    )\r\n                }\r\n                return of(res);\r\n              }),\r\n              catchError((e: any) => {\r\n\r\n                return throwError(\r\n                  new Error(\"Mail Error\")\r\n                );\r\n              })\r\n            )\r\n        }\r\n        return of(res);\r\n      }),\r\n      catchError((e: any) => {\r\n\r\n        return throwError(\r\n          new Error(\"Sending Message Error\")\r\n        );\r\n      })\r\n    )\r\n    .subscribe(\r\n      c=>{\r\n        this.updateFeed(c);\r\n        this.gotoBottom();\r\n      },\r\n      e=>console.error(e)\r\n    )\r\n  }\r\n\r\n  updateFeed(message:Message){\r\n    let existinglistv = this._ds._conversations.value;\r\n    let existinglist =  this.threads;\r\n    const loadedIndex = existinglist.findIndex(m=> m.code == message.code);\r\n    if(loadedIndex > -1){\r\n      existinglist[loadedIndex] = message;\r\n    }else{\r\n      existinglist.push(message);\r\n    }\r\n    existinglistv.set(this.recipient.code, existinglist);\r\n    this._ds._conversations.next(existinglistv)\r\n  }\r\n\r\n  gotoBottom(){\r\n    let element:any = document.getElementById(`${this.me?.code}_thread_conversation_dialog_${this.recipient?.code}`);\r\n    element.scroll({ top: element.scrollHeight, behavior: 'smooth' });\r\n    // $(\"#mydiv\").scrollTop(()=> { return this.scrollHeight; });\r\n  }\r\n\r\n  get threads() {\r\n    return this._ds._conversations.value.get(this.recipient.code) || [];\r\n  }\r\n  getTime(time: any) {\r\n    return new Date(time).toLocaleDateString()\r\n  }\r\n\r\n  isHtml(content: string) {\r\n    let regexForHTML = /<([A-Za-z][A-Za-z0-9]*)\\b[^>]*>(.*?)<\\/\\1>/;\r\n    return regexForHTML.test(content);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"chat-detail\" *ngIf=\"me?.code && recipient?.code\">\r\n            <div class=\"chat-profile-header clearfix\">\r\n                <div class=\"left\">\r\n                    <div class=\"clearfix\">\r\n                        <div class=\"chat-profile-photo\">\r\n                            <img [src]=\"recipient?.passport\" *ngIf=\"recipient?.passport\" alt=\"\" />\r\n                            <img [src]=\"'assets/img/ezgif.com-webp-to-png.png'\" *ngIf=\"!recipient?.passport\" alt=\"\" />\r\n                        </div>\r\n                        <div class=\"chat-profile-name pt-0\">\r\n                            <h3 class=\"mb-0\">{{recipient?.firstName}} {{recipient?.lastName}}</h3>\r\n                            <span>\r\n                                {{recipient?.status}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right text-right\">\r\n                    <div class=\"dropdown\">\r\n                        <a\r\n                            class=\"btn btn-outline-primary border-0 btn-sm dropdown-toggle\"\r\n                            href=\"javascript:void(0)\"\r\n                            role=\"button\"\r\n                            data-toggle=\"dropdown\"\r\n                        >\r\n                        <i class=\"icon-copy bi bi-grid-3x2-gap\"></i>\r\n                        </a>\r\n                        <div class=\"dropdown-menu dropdown-menu-right\">\r\n                            <a class=\"dropdown-item\" href=\"javascript:void(0)\">Expand</a>\r\n                            <a class=\"dropdown-item\" href=\"javascript:void(0)\">Export Chat</a>\r\n                            <a class=\"dropdown-item\" href=\"javascript:void(0)\">Search</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"chat-box\">\r\n                <div class=\"chat-desc customscroll mCustomScrollbar mCustomScrollBox\" id=\"{{me?.code}}_thread_conversation_dialog_{{recipient?.code}}\">\r\n                    <p class=\"text-center pb-2 pt-2 m-2 text-primary\" *ngIf=\"messages.length < 1\">Nothing to see here</p>\r\n                    <ul>\r\n                        <li class=\"clearfix\" [ngClass]=\"{'admin_chat': message?.sender == me?.code }\" \r\n                        *ngFor=\"let message of threads\">\r\n                            <span class=\"chat-img\">\r\n                                <img *ngIf=\"message?.sender == me?.code\" [src]=\"me?.passport ? me?.passport :  'assets/img/Sphere_rotating_transparency.gif'\" alt=\"\" />\r\n                                <img *ngIf=\"message?.sender != me?.code\" [src]=\"recipient?.passport ? recipient?.passport :  'assets/img/Sphere_rotating_transparency.gif'\" alt=\"\" />\r\n                            </span>\r\n                            <div class=\"chat-body clearfix\" *ngIf=\"!message?.file\">\r\n                                <p>\r\n                                    <span *ngIf=\"isHtml(message.content)\" [innerHTML]=\"message?.content\"></span>\r\n                                    <span *ngIf=\"!isHtml(message.content)\">{{message?.content}}</span>\r\n                                </p>\r\n                                <div class=\"chat_time\" *ngIf=\"message?.created_at\">\r\n                                    <i class=\"icon-copy bi bi-reply-fill\"></i> \r\n                                    {{getTime(message.created_at)}}\r\n                                    <br>\r\n                                    {{message?.status}}\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"chat-body clearfix\" *ngIf=\"message?.file\">\r\n                                <div class=\"upload-file-box clearfix\">\r\n                                    <div class=\"left\">\r\n                                        <img\r\n                                            [src]=\"message?.file\"\r\n                                            alt=\"\"\r\n                                        />\r\n                                        <div class=\"overlay\">\r\n                                            <a href=\"javascript:void(0)\">\r\n                                                <span\r\n                                                    ><i class=\"fa fa-angle-down\"></i\r\n                                                ></span>\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"right\">\r\n                                        <h3>{{message?.fileName}}</h3>\r\n                                        <span *ngIf=\"message?.status != 'Yet'\">{{message?.status}}</span>\r\n                                        <a href=\"javascript:void(0)\" (click)=\"message.status = 'Sent'\" *ngIf=\"message?.status == 'Yet' && message?.sender == me?.code\">Send</a>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"chat_time\" *ngIf=\"message?.created_at\">{{getTime(message.created_at)}}</div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"chat-footer min-h-50\">\r\n                    <div class=\"pt-2 pb-2 border-bs\">\r\n                        <app-mail-textarea [id]=\"me?.code + '_messagebox_' + recipient?.code\" (uploadedEvent)=\"uploadedEventHandler($event)\" \r\n                            (sendEvent)=\"sendEventHandler($event)\"></app-mail-textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"],"names":[],"sourceRoot":"webpack:///"}