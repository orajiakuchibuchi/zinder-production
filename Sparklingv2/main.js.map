{"version":3,"file":"main.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACXuD;;;AAEvD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,MAAM;QACZ,YAAY,EAAE,GAAE,EAAE,CAAC,qfAA4B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;KACxE;IACD;QACE,IAAI,EAAE,OAAO;QACb,YAAY,EAAE,GAAE,EAAE,CAAC,8WAA8B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;KAC3E;IACD;QACE,IAAI,EAAE,EAAE;QACR,YAAY,EAAE,GAAE,EAAE,CAAC,kqBAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC;KAC9E;CACF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,CAAC,CAAC,EAC7B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;ACZjB,MAAM,YAAY;IAqBvB,YAAY,iBAAoC,EAAE,KAAmB;QApBrE,UAAK,GAAG,aAAa,CAAC;QAEtB,cAAS,GAAG;YACV,MAAM;YACN,UAAU;YACV,SAAS;YACT,WAAW;YACX,UAAU;YACV,KAAK;YACL,kBAAkB;YAClB,WAAW;SACZ,CAAC;QAEF,kBAAa,GAAG,KAAK,CAAC,IAAI,CACxB,EAAC,MAAM,EAAE,CAAC,EAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CACP,UAAU,CAAC,EAAE,CAChB,CAAC;QAIA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;QAC1D,IAAI,CAAC,oBAAoB,GAAG,GAAG,EAAE,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QACpE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC1D,CAAC;IACD,WAAW;QAET,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC7D,CAAC;;wEA7BU,YAAY;0GAAZ,YAAY;QCPxB,sEAAK;QACJ,2EAA+B;QAC/B,kFAA6C;QAC9C,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHmD;AAEF;AACT;AACgC;AACJ;AACR;AACQ;AACW;AACA;AACT;AACA;;;AAsBtE,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GAPb;QACT,EAAE,OAAO,EAAE,mEAAiB,EAAE,QAAQ,EAAE,oFAAgB,EAAE,KAAK,EAAE,IAAI,EAAE;QACvE,EAAE,OAAO,EAAE,mEAAiB,EAAE,QAAQ,EAAE,+FAAqB,EAAE,KAAK,EAAE,IAAI,EAAE;QAC5E,EAAE,OAAO,EAAE,mEAAiB,EAAE,QAAQ,EAAE,+FAAqB,EAAE,KAAK,EAAE,IAAI,EAAE;QAC5E,EAAE,OAAO,EAAE,mEAAiB,EAAE,QAAQ,EAAE,sFAAiB,EAAE,KAAK,EAAE,IAAI,EAAE;QACxE,EAAE,OAAO,EAAE,mEAAiB,EAAE,QAAQ,EAAE,sFAAiB,EAAE,KAAK,EAAE,IAAI,EAAE;KACzE,YAbQ;YACP,oEAAa;YACb,iEAAgB;YAChB,kEAAgB;YAChB,0FAAuB;YACvB,sFAAiC,EAAE;SACpC;mIAUU,SAAS,mBAlBlB,wDAAY,aAGZ,oEAAa;QACb,iEAAgB;QAChB,kEAAgB;QAChB,0FAAuB;;;;;;;;;;;;;;;;;;;;;;ACPpB,MAAM,qBAAqB;IAEhC,YAAoB,qBAA4C,EAAS,IAAgB;QAArE,0BAAqB,GAArB,qBAAqB,CAAuB;QAAS,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAC7F,+EAA+E;IAC/E,SAAS,CAAC,OAA6B,EAAE,IAAiB;QACxD,IAAI,YAAY,GAAI,OAAO,CAAC,KAAK,EAAE,CAAC;QACpC,IAAG,OAAO,CAAC,MAAM,IAAI,MAAM,EAAC;YAC1B,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;YACnG,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,qBAAqB,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;YAC7G,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,qBAAqB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YACpF,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;YACnG,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YAC9F,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,mBAAmB,CAAC,CAAC;SAC3G;QACH,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IACD,YAAY,CAAC,GAAoB,EAAE,UAAc,EAAE,SAAgB;QACjE,IAAI,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,MAAM,EAAE;YACvC,IAAI,GAAG,CAAC,IAAI,YAAY,QAAQ,EAAE;gBAChC,GAAG,GAAI,GAAG,CAAC,KAAK,CAAC;oBACf,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC;iBAC7C,CAAC;aACH;iBAAM;gBACL,MAAM,GAAG,GAAO,EAAE,CAAC;gBACnB,GAAG,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC;gBAC5B,GAAG,GAAI,GAAG,CAAC,KAAK,CAAC;oBACf,IAAI,kCAAM,GAAG,CAAC,IAAI,GAAK,GAAG,CAAC;iBAC5B,CAAC;aACH;SACF;QACD,IAAI,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,KAAK,EAAE;YACtC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;gBACd,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC;aAC9C,CAAC,CAAC;SACJ;QACD,OAAO,GAAG,CAAC;IACb,CAAC;;0FApCU,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB;;;;;;;;;;;;;;;;;;;;;ACNY;AACc;;AAE5D,gBAAgB;AAIT,MAAM,gBAAgB;IAE3B,gBAAe,CAAC;IAEhB,SAAS,CAAC,OAA6B,EAAE,IAAiB;QACxD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IACD,OAAO,CAAC,IAAiB,EAAE,OAA6B;QACtD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;aACxB,IAAI,CACH,qDAAK,CAAC,CAAC,CAAC,EACR,0DAAU,CAAC,CAAC,SAAc,EAAE,EAAE;YAC5B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,OAAO,gDAAU,CAAC,SAAS,CAAC,CAAC;QAC/B,CAAC,CAAC,CACH,CAAC,IAAI,CACJ,uDAAO,CAAC,KAAK,CAAC,EACd,0DAAU,CAAC,CAAC,SAAc,EAAE,EAAE;YAC5B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,OAAO,gDAAU,CAAC,SAAS,CAAC,CAAC;QAE/B,CAAC,CAAC,CACH;IACL,CAAC;;gFAvBU,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;;;;;;;;;;;ACLyC;;;;;AAMtD,MAAM,iBAAiB;IAM5B,YAAoB,GAAgB,EAAU,KAAkB,EAAU,MAAc;QAApE,QAAG,GAAH,GAAG,CAAa;QAAU,UAAK,GAAL,KAAK,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QALxF,UAAK,GAAoB,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI,CAC3E,mDAAG,CAAC,CAAC,GAAU,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAC/B,CAAC,IAAI,CACJ,2DAAW,CAAC,CAAC,CAAC,CACf,CAAC;IAC0F,CAAC;IAE7F,SAAS,CAAC,OAA6B,EAAE,IAAiB;QACxD,IAAI,OAAO,CAAC,MAAM,IAAI,MAAM,EAAE;YAC5B,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SAE1C;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAED,aAAa,CAAC,OAA6B,EAAE,IAAiB;QAC5D,IAAI,YAAY,GAAQ,OAAO,CAAC,KAAK,EAAE,CAAC;QACxC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAC9B,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACvB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CACpB,yDAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACrB,IAAI,GAAG,IAAI,GAAG,CAAC,EAAE,EAAE;oBACjB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBACtB,IAAI,OAAO,CAAC,IAAI,YAAY,QAAQ,EAAE;wBACpC,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC;4BAC3B,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC;yBAC3C,CAAC;qBACH;yBAAM;wBACL,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;wBAC3D,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC,EAAC,IAAI,EAAC,CAAC;qBACrC;iBACF;gBACD,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YACnC,CAAC,CAAC,CACH;SACF;aAAM;YACL,IAAI,OAAO,CAAC,IAAI,YAAY,QAAQ,EAAE;gBACpC,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC;oBAC3B,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC;iBAC5C,CAAC;aACH;iBAAM;gBACL,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC3D,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC,EAAC,IAAI,EAAC,CAAC;aACrC;SACF;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;;kFA/CU,iBAAiB;kHAAjB,iBAAiB,WAAjB,iBAAiB;;;;;;;;;;;;;;;;;;;ACJgB;;AAGvC,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,SAAS,CAAC,OAA6B,EAAE,IAAiB;QACxD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IACD,OAAO,CAAC,IAAiB,EAAE,OAA6B;QACtD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,uDAAO,CAAC,KAAK,CAAC,EACd,mDAAG,CAAC,GAAG,CAAC,EAAE;QAEV,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;;kFAbU,iBAAiB;kHAAjB,iBAAiB,WAAjB,iBAAiB;;;;;;;;;;;;;;;;;;;;;;ACd6B;AAQ7B;AACQ;AACD;;;AAGrC,MAAM,GAAG,GAAG,EAAE,CAAC;AACf,2BAA2B;AAC3B,MAAM,UAAU,GAAG;IACjB,GAAG,yEAAe,aAAa;IAC/B,GAAG,yEAAe,4BAA4B;IAC9C,GAAG,yEAAe,gBAAgB;CACnC;AAGM,MAAM,qBAAqB;IAEhC,YAAoB,wBAAkD;QAAlD,6BAAwB,GAAxB,wBAAwB,CAA0B;IACxE,CAAC;IACS,SAAS,CAAC,GAAqB,EAAE,IAAiB;QACxD,MAAM,cAAc,GAAG,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAClE,IAAI,cAAc,IAAI,cAAc,CAAC,GAAG,EAAE;YACxC,IAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC1C,OAAO,wCAAE,CAAC,cAAc,CAAC,CAAC;aAC3B;SACF;QACD,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACnC,wBAAwB;QACpB,yBAAyB;QAC7B,qCAAqC;IACvC,CAAC;IACD,WAAW,CACT,GAAqB,EACrB,IAAiB;QAEf,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAC1B,mDAAG,CAAC,GAAG,CAAC,EAAE;YACR,IAAI,GAAG,YAAY,8DAAY,EAAE;gBAC3B,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;aAC1D;QACH,CAAC,CAAC,CAAC,CAAC;IACV,CAAC;;0FA1BU,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB;;;;;;;;;;;;;;;;ACtB3B,MAAM,QAAQ;IASjB;QAPA,aAAQ,GAAe,EAAE,CAAC;QAC1B,SAAI,GAAW,EAAE,CAAC;QAGlB,WAAM,GAAW,SAAS,CAAC;QAC3B,SAAI,GAAW,EAAE,CAAC;QAGd,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QACxC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;IACvC,CAAC;IAED,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;CAEJ;;;;;;;;;;;;;;;;;;;ACvBkC;AASA;AAuBlC;;;;;;;;;;;;;;;;ACND,MAAM,KAAK,GAAS;IAClB,SAAS,EAAE,EAAE;IACb,IAAI,EAAE,EAAE;IACR,QAAQ,EAAE,EAAE;IACZ,OAAO,EAAE,EAAE;IACX,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,QAAQ,EAAE,EAAE;IACZ,UAAU,EAAE,EAAE;IACd,IAAI,EAAE,EAAE;IACR,MAAM,EAAE,EAAE;IACV,SAAS,EAAE,EAAE;IACb,EAAE,EAAE,EAAE;IACN,GAAG,EAAE,IAAI;IACT,cAAc,EAAE,KAAK;IACrB,cAAc,EAAE,KAAK;IACrB,QAAQ,EAAE,KAAK;IACf,gBAAgB,EAAE,EAAE;IACpB,aAAa,EAAE,EAAE;IACjB,WAAW,EAAE,CAAC;IACd,aAAa,EAAE,IAAI;IACnB,cAAc,EAAE,EAAE;IAClB,SAAS,EAAE,EAAE;CACd;AAKE;;;;;;;;;;;;;;;;;ACtD+C;AAIjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHD;AACA;AAEA;AACA;AACA;AACA;;;AAKM,MAAOW,WAAP,CAAkB;AAYtB;AACAC,cAAoBC,IAApB,EAAoC;AAAhB;AAXpB,gBAA6B,IAAIb,iDAAJ,CAAyB,EAAzB,CAA7B;AACA,uBAAuC,IAAIA,iDAAJ,CAA4B,EAA5B,CAAvC;AACO,iBAA0B,KAAKc,IAAL,CAAUC,YAAV,EAA1B;AACP,kBAAiBP,yEAAjB;AACA,2BAA2B,KAA3B;AACO,oBAA+B,EAA/B;AACA,qBAAqB,IAArB;AACA,iBAAgBA,kFAAhB;AACP,mBAAU,IAAIE,gEAAJ,CAAY,KAAKQ,KAAjB,CAAV;AACQ,oBAAmB,KAAKC,OAAxB,CAE4B,CAClC;AACD;;AAEKC,mBAAiB,CAACC,UAAD,EAAW;AAAA;;AAAA;AAChC,YAAMP,IAAI,SAAS,KAAI,CAACK,OAAL,CAAaG,gBAAb,CAA8BD,UAA9B,CAAnB,CADgC,CAGhC;AACA;;AACA,UAAI,EAACP,IAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAES,UAAP,KAAqB,OAAO,KAAI,CAACJ,OAAL,CAAaK,yBAAb,EAAP,EAAiDC,WAA1E,EACE,OAAO,IAAP;AAEF,aAAO,KAAP;AARgC;AASjC;;AAEKC,iBAAe;AAAA;;AAAA;AACnB;AACA,YAAMC,WAAW,GAAO,MAAI,CAACR,OAAL,CAAaS,cAAb,EAAxB,CAFmB,CAGnB;AACA;;;AACA,UAAI,CAACD,WAAL,EAAkB;AAChB,eAAO1B,gDAAU,CAAC,IAAI4B,KAAJ,CAAU,sCAAV,CAAD,CAAjB;AACD;;AAAA;AACD,YAAI,CAACC,QAAL,GAAgB,IAAIpB,gEAAJ,CAAY,MAAI,CAACQ,KAAjB,EAAwBS,WAAW,CAACI,UAApC,CAAhB,CARmB,CASnB;AACA;AACA;;AACA,UAAI;AACF,cAAMC,OAAO,SAAS,MAAI,CAACF,QAAL,CAAcF,cAAd,GAA+BK,SAA/B,EAAtB,CADE,CAEF;;AACA,eAAO/B,wCAAE,CAAC8B,OAAD,CAAT,CAHE,CAIF;AACD,OALD,CAKE,OAAOE,CAAP,EAAU;AACV;AACA,eAAOjC,gDAAU,CAAC,IAAI4B,KAAJ,CAAU,gKAAV,CAAD,CAAjB;AACD;AApBkB;AAqBpB;;AACYM,YAAU;AAAA;;AAAA;AACrB,YAAI,CAACC,SAAL,GAAiB,IAAjB;AACA,mBAAa,IAAI3B,uFAAJ,GAAkB4B,QAAlB,GAA6BC,IAA7B,CAAkCD,QAAQ,IAAG;AAExD,YAAIA,QAAQ,KAAKE,SAAjB,EAA4B;AAC1B,gBAAI,CAACH,SAAL,GAAiB,KAAjB;AACA,gBAAI,CAACI,eAAL,GAAuB,IAAvB;AACA,gBAAI,CAACC,QAAL,GAAgBJ,QAAQ,CAACK,KAAT,GAAiBL,QAAQ,CAACK,KAA1B,GAAkCL,QAAQ,CAACM,KAA3D;AACD,SAJD,MAIO;AACL,gBAAI,CAACP,SAAL,GAAiB,KAAjB;AACA,gBAAI,CAACI,eAAL,GAAuB,KAAvB;AACA,gBAAI,CAACC,QAAL,GAAgB,EAAhB;AACD;;AACD,eAAO,MAAI,CAACD,eAAZ;AAED,OAbY,CAAb;AAFqB;AAgBtB;;AACYI,gBAAc;AAAA;;AAAA;AACzB,mBAAa,MAAI,CAACd,QAAL,CAAce,OAAd,EAAb;AADyB;AAE1B;;AACYC,cAAY,CAACC,IAAD,EAAa;AAAA;;AAAA;AACpC,mBAAa,MAAI,CAACjB,QAAL,CAAckB,QAAd,CAAuBD,IAAvB,CAAb,CADoC,CAEpC;AAFoC;AAGrC;;AACOE,mBAAiB;AACvB,QAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,WAAO,QAAQD,IAAI,CAACE,OAAL,GAAeC,QAAf,EAAyB,eAAxC;AACD;;AACOC,aAAW,CAACxC,IAAD,EAAU;AAC3B,WAAO,KAAKD,IAAL,CAAU0C,IAAV,CAAe,GAAG,KAAKC,MAAM,QAA7B,EAAuC1C,IAAvC,EAA6C2C,IAA7C,CACLrD,mDAAG,CACAsD,GAAD,IAAa;AAEX,aAAO;AACLC,cAAM,EAAE,KADH;AAELC,gBAAQ,EAAE,4CAFL;AAGL9C,YAHK;AAIL4C;AAJK,OAAP;AAMD,KATA,CADE,EAYLpD,mDAAG,CACAuD,MAAD,IAAgB;AACd,UAAIC,IAAI,GAAG,KAAKC,WAAL,CAAiBC,KAA5B;AACAF,UAAI,CAACG,IAAL,CAAUJ,MAAM,CAACH,GAAjB;AACA,WAAKK,WAAL,CAAiBG,IAAjB,CAAsBJ,IAAtB;AACD,KALA,CAZE,CAAP;AAoBD;;AACc,MAAXK,WAAW;AACb,WAAOC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAP;AACD;;AACDC,gBAAc,CAACC,KAAD,EAAc;AAC1BH,gBAAY,CAACI,OAAb,CAAqB,YAArB,EAAmCD,KAAnC;AACD;;AACDE,kBAAgB;AACdL,gBAAY,CAACM,KAAb;AACAC,kBAAc,CAACD,KAAf;AACD;;AACDE,QAAM;AACJ,WAAO,KAAKC,kBAAL,CAAwB,KAAKV,WAA7B,EAA0CV,IAA1C,CACLnD,mDAAG,CAAEoD,GAAD,IAAa;AACf,WAAKe,gBAAL;AACA,WAAK3D,IAAL,CAAUoD,IAAV,CAAe3B,SAAf;;AACA,WAAKuC,aAAL;AACD,KAJE,CADE,CAAP;AAOD;;AACOA,eAAa;AACnBV,gBAAY,CAACM,KAAb;AACD;;AAEOK,mBAAiB,CAACjE,IAAD,EAAW;AAClC,QAAIkE,QAAQ,GAAQlE,IAApB;AACAkE,YAAQ,CAACC,EAAT,GAAc1C,SAAd;AACA,WAAO,KAAK1B,IAAL,CAAU0C,IAAV,CAAe,GAAG,KAAKC,MAAM,OAA7B,EAAsC1C,IAAtC,EAA4C2C,IAA5C,CACLrD,mDAAG,CACAsD,GAAD,IAAa;AAEX,aAAO;AACLC,cAAM,EAAE,KADH;AAELC,gBAAQ,EAAE,iCAFL;AAGL9C,YAAI,EAAE4C,GAHD;AAILA;AAJK,OAAP;AAMD,KATA,CADE,CAAP;AAaD;;AAEOwB,UAAQ,CAACpE,IAAD,EAAU;AACxB,QAAIqE,YAAY,GAAG,IAAI5E,4DAAJ,GAAiB6E,GAAjB,CAAqB,OAArB,EAA8BtE,IAAI,CAAC4B,KAAnC,EAA0C0C,GAA1C,CAA8C,UAA9C,EAA0DtE,IAAI,CAACuE,QAA/D,CAAnB;AACA,WAAO,KAAKxE,IAAL,CAAUyE,GAAV,CAAc,GAAG,KAAK9B,MAAM,QAA5B,EAAsC;AAAE+B,YAAM,EAAEJ;AAAV,KAAtC,EAAgE1B,IAAhE,CACLrD,mDAAG,CACAsD,GAAD,IAAa;AACX,UAAIA,GAAG,CAAC8B,MAAJ,GAAa,CAAjB,EAAoB;AAClB,eAAO;AACL7B,gBAAM,EAAE,KADH;AAEL8B,iBAAO,EAAE;AAFJ,SAAP;AAID;;AACD,aAAO;AACL9B,cAAM,EAAE,IADH;AAEL8B,eAAO,EAAE,YAFJ;AAGL3E,YAAI,EAAE4C,GAAG,CAAC,CAAD;AAHJ,OAAP;AAKD,KAbA,CADE,EAgBLrD,0DAAS,CAAEuD,QAAD,IAAkB;AAC1B,UAAIA,QAAQ,CAACD,MAAb,EAAqB;AACnB,eAAOxD,2CAAI,CAAC,KAAK2C,YAAL,CAAkBhC,IAAI,CAAC4B,KAAvB,CAAD,CAAJ,CAAoCe,IAApC,CACLpD,0DAAS,CAAEwD,MAAD,IAAc;AACtB,cAAIA,MAAM,CAAC6B,UAAX,EAAuB;AACrB,gBAAIC,EAAE,GAAG/B,QAAQ,CAAC9C,IAAlB;AACA,gBAAI8E,KAAK,mCAAOD,EAAP,GAAS;AAAEE,uBAAS,EAAChC,MAAM,CAAC6B,UAAnB;AAA+BA,wBAAU,EAAE7B,MAAM,CAAC6B;AAAlD,aAAT,CAAT;AACA,mBAAO,KAAKX,iBAAL,CAAuBa,KAAvB,EAA8BnC,IAA9B,CACLnD,mDAAG,CAAEwF,SAAD,IAAmB;AACrB,mBAAKxB,cAAL,CAAoBwB,SAAS,CAACpC,GAAV,CAAcmC,SAAlC;AACA,mBAAK/E,IAAL,CAAUoD,IAAV,CAAe4B,SAAS,CAACpC,GAAzB;AACD,aAHE,CADE,CAAP;AAMD;;AACD,iBAAOxD,wCAAE,CACP;AACEyD,kBAAM,EAAE,KADV;AAEEC,oBAAQ,EAAEC;AAFZ,WADO,CAAT;AAMD,SAjBQ,CADJ,CAAP;AAoBD;;AACD,aAAO3D,wCAAE,CACP;AACEyD,cAAM,EAAE,KADV;AAEEC,gBAAQ,EAAEA,QAAQ,CAAC6B;AAFrB,OADO,CAAT;AAMD,KA7BQ,CAhBJ,CAAP;AA+CD;;AAEDM,gBAAc,CAACxB,KAAD,EAAW;AACvB,QAAIY,YAAY,GAAG,IAAI5E,4DAAJ,GAAiB6E,GAAjB,CAAqB,WAArB,EAAkCb,KAAlC,CAAnB;AACA,WAAO,KAAK1D,IAAL,CAAUyE,GAAV,CAAc,GAAG,KAAK9B,MAAM,OAA5B,EAAqC;AAAE+B,YAAM,EAAEJ;AAAV,KAArC,CAAP;AACD;;AACON,oBAAkB,CAACN,KAAD,EAAW;AACnC,QAAIA,KAAJ,EAAW;AACT,aAAO,KAAKwB,cAAL,CAAoBxB,KAApB,EAA2Bd,IAA3B,CACLrD,mDAAG,CAAEsD,GAAD,IAAgBA,GAAG,CAACsC,GAAJ,EAAjB,CADE,EAEL3F,0DAAS,CAAEwD,MAAD,IAAgB;AACxB,YAAIA,MAAM,CAACoB,EAAX,EAAe;AACb,iBAAO,KAAKpE,IAAL,CAAUoF,MAAV,CAAiB,GAAG,KAAKzC,MAAM,SAASK,MAAM,CAACoB,EAAE,EAAjD,EAAqDxB,IAArD,CACLrD,mDAAG,CAACsD,GAAG,IAAG;AACR,mBAAO;AACLC,oBAAM,EAAE,KADH;AAELC,sBAAQ,EAAE,8BAFL;AAGLb,kBAAI,EAAEW;AAHD,aAAP;AAKD,WANE,CADE,CAAP;AASD;;AACD,eAAOxD,wCAAE,CACP;AACEyD,gBAAM,EAAE,KADV;AAEEC,kBAAQ,EAAE;AAFZ,SADO,CAAT;AAMD,OAlBQ,CAFJ,CAAP;AAsBD;;AACD,WAAO1D,wCAAE,CACP;AACEyD,YAAM,EAAE,KADV;AAEEC,cAAQ,EAAE;AAFZ,KADO,CAAT;AAMD;;AACOsC,mBAAiB,CAACxD,KAAD,EAAW;AAClC,QAAIyC,YAAY,GAAG,IAAI5E,4DAAJ,GAAiB6E,GAAjB,CAAqB,OAArB,EAA8B1C,KAA9B,CAAnB;AACA,WAAO,KAAK7B,IAAL,CAAUyE,GAAV,CAAc,GAAG,KAAK9B,MAAM,QAA5B,EAAsC;AAAE+B,YAAM,EAAEJ;AAAV,KAAtC,CAAP;AACD;;AACDnC,UAAQ,CAACD,IAAD,EAAU;AAChB,WAAO,KAAKmD,iBAAL,CAAuBnD,IAAI,CAACL,KAA5B,EAAmCe,IAAnC,CACLpD,0DAAS,CAAEuD,QAAD,IAAkB;AAC1B,UAAIA,QAAQ,IAAIA,QAAQ,CAAC4B,MAAT,GAAkB,CAAlC,EAAqC;AACnC,eAAOvF,gDAAU,CAAC;AAChB0D,gBAAM,EAAE,KADQ;AAEhBC,kBAAQ,EAAE;AAFM,SAAD,CAAjB;AAID;;AACD,aAAO,KAAKN,WAAL,CAAiBP,IAAjB,CAAP;AACD,KARQ,CADJ,CAAP;AAYD;;AACDoD,OAAK,CAACpD,IAAD,EAAW;AACd,WAAO,KAAKmC,QAAL,CAAcnC,IAAd,CAAP;AACD;;AAxPqB;;;mBAAXpC,aAAWyF,uDAAAA,CAAAA,4DAAAA;AAAA;;;SAAXzF;AAAW0F,WAAX1F,WAAW;AAAA2F,cAFV;;;;;;;;;;;;;;;;;;;;;;;;ACR8D;AACjB;AAC6B;;;AAQjF,MAAM,UAAU;IAkBrB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAjB5B,WAAM,GAAW,yEAAe,CAAC;QACjC,gBAAW,GAAiB,IAAI,yCAAO,EAAO,CAAC;QAC/C,mBAAc,GAAyB,IAAI,iDAAe,CAAM,IAAI,CAAC,CAAC;QACtE,oBAAe,GAA8B,IAAI,yCAAO,EAAoB,CAAC;QACrF,oBAAe,GAAiC,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QACpF,eAAU,GAAoB,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QAC9D,eAAU,GAA0B,IAAI,iDAAe,CAAQ,EAAE,CAAC,CAAC;QAC3D,0BAAqB,GAA0B,IAAI,iDAAe,CAAQ,EAAE,CAAC,CAAC;QACtF,0BAAqB,GAAsB,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;QACrF,gBAAW,GAAoC,IAAI,iDAAe,CAAiB,SAAS,CAAC,CAAC;QACtF,gBAAW,GAAsB,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAE,2DAAW,CAAC,CAAC,CAAC,CAAE,CAAC;QAClF,UAAK,GAAsB,IAAI,CAAC,WAAW,CAAC,IAAI,CAC9C,2DAAW,EAAE,EACb,mDAAG,CAAC,CAAC,GAAO,EAAC,EAAE;YACb,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC,CAAC,CACH,CAAC;IACuC,CAAC;IAClC,UAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,OAAO,CAAC;IAC7C,CAAC;IACD,qBAAqB,CAAC,IAAQ;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,gBAAgB,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;IACtE,CAAC;IACD,kCAAkC,CAAC,IAAQ;QACzC,OAAO,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,IAAI,CAC1C,mDAAG,CAAC,CAAC,CAAO,EAAC,EAAE,EAAC,CAAC,GAAG,EAAE,CAAC,CACxB;IACH,CAAC;IACD,YAAY,CAAC,GAAO;QAClB,cAAc,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5D,CAAC;IACD,SAAS,CAAC,IAAQ;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,gBAAgB,EAAC,IAAI,CAAC;IAC5D,CAAC;IAED,WAAW;QACT,IAAI,WAAW,GAAO,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAC3D,IAAI,QAAQ,GAAc,IAAI,CAAC;QAC/B,IAAG,WAAW,EAAC;YACb,IAAI;gBACF,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;gBACtC,QAAQ,GAAG,WAAW,CAAC;aACxB;YAAC,OAAO,KAAK,EAAE;gBACd,cAAc,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;gBACxC,WAAW,GAAG,IAAI,CAAC;aACpB;SACF;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IACD,IAAI,OAAO,CAAC,IAAQ;QAClB,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACxC,CAAC;IACD,aAAa;QACX,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC;IACD,IAAI,OAAO;QACT,OAAO,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACzC,CAAC;IACD,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;IAC/B,CAAC;IACD,IAAI,oBAAoB;QACtB,OAAO,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;IAC1C,CAAC;IACD,IAAI,SAAS,CAAC,GAAO;QACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IACD,IAAI,YAAY,CAAC,GAAO;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IACD,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;IACnC,CAAC;IACD,IAAI,cAAc,CAAC,GAAO;QACxB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IACD,IAAI,oBAAoB,CAAC,IAAU;QACjC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;;oEAhFU,UAAU;2GAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;;;;;;;;;;;;;;;;;;ACLb,MAAM,wBAAwB;IAEnC;QACQ,aAAQ,GAAa,EAAE,CAAC;QAExB,UAAK,GAAG,IAAI,GAAG,EAAqC,CAAC;IAH7C,CAAC;IAKR,YAAY,CAAC,UAAkB;QACpC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IAChD,CAAC;IAEM,UAAU,CAAC,UAAkB;QAClC,qCAAqC;QACrC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE;YAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAChC;IACH,CAAC;IAEH,GAAG,CAAC,GAAO;QACP,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,EAAE;YAAC,OAAO,IAAW,CAAC;SAAE;QAElC,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACzB,MAAM,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAE9B,6BAA6B;QAC7B,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,IAAI,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,EAAE;YAC9C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACvB,OAAO,IAAW,CAAC;SACtB;QAED,OAAO,YAAY,CAAC;IACxB,CAAC;IAED,GAAG,CAAC,GAAO,EAAE,KAAU,EAAE,MAAqB,IAAI;QAChD,MAAM,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC3B,IAAI,GAAG,EAAE;YACL,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC,CAAC;YAC7C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;SACzC;aAAM;YACH,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;YAC1C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;SACzC;IACH,CAAC;;gGA5CU,wBAAwB;yHAAxB,wBAAwB,WAAxB,wBAAwB,mBAFvB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFpB;AACA;AACA;AACA;AACA;AAGA;;;;;AAMM,MAAOG,WAAP,CAAkB;AAiEtB7F,cAAoBC,IAApB,EAA8C6F,KAA9C,EAA0EC,IAA1E,EAA0F;AAAtE;AAA0B;AAA4B;AAhE1E,kBAAiBnG,yEAAjB;AACA,kBAA+B,IAAIR,iDAAJ,CAAyB,EAAzB,CAA/B;AACQ,gBAA6B,IAAIA,iDAAJ,CAAyB,EAAzB,CAA7B;AACR,iBAAiC,IAAIA,iDAAJ,CAA4B,CAA5B,CAAjC;AACQ,uBAAuC,IAAIA,iDAAJ,CAA4B,EAA5B,CAAvC;AAER,0BAAyC,IAAIA,iDAAJ,CAA2B,EAA3B,CAAzC;AAEQ,sBAAsC,IAAIA,iDAAJ,CAA4B,EAA5B,CAAtC;AACA,qBAAoC,IAAIA,iDAAJ,CAA4B,EAA5B,CAApC;AACD,sBAAkC,KAAK4G,WAAL,GAAmBnD,IAAnB,CACvCrD,mDAAG,CAAEsD,GAAD,IAAW;AACb,YAAMmD,GAAG,GAAO,KAAKF,IAAL,CAAUG,OAA1B;AACA,YAAMC,CAAC,GAAO,KAAKC,OAAL,EAAd;AAEA,YAAMC,iBAAiB,GAAOJ,GAAG,GAAGnD,GAAG,CAACwD,MAAJ,CAAYC,CAAD,IAAS;AAAC,eAAO,CAACA,CAAC,CAACC,KAAF,IAAW,UAAX,IAAyBL,CAAC,CAACM,IAAF,CAAOC,QAAP,CAAgBH,CAAC,CAACC,KAAlB,CAA1B,KAAuDD,CAAC,CAACI,MAAF,IAAaV,GAA3E;AAA+E,OAApG,CAAH,GAA2G,EAA5I;AAEA,WAAKW,SAAL,CAAetD,IAAf,CAAoB+C,iBAApB;AACA,aAAO,KAAKO,SAAL,CAAexD,KAAtB;AACD,KARE,CADoC,EAUvCuC,2DAAW,CAAC,CAAD,CAV4B,CAAlC;AAYA,gBAA2B,IAAIkB,GAAJ,EAA3B;AACA,6BAAuC,IAAIA,GAAJ,EAAvC;AACC,yBAAoD,IAAIzH,iDAAJ,CAAuC,IAAIyH,GAAJ,EAAvC,CAApD;AACD,iBAA0B,KAAK3G,IAAL,CAAUC,YAAV,EAA1B;AACA,iBAA4B,KAAKgD,WAAL,CAAiBhD,YAAjB,EAA5B;AACA,2BAAoCb,wCAAE,CAACsG,gDAAD,CAAF,CAAU/C,IAAV,CACzCpD,0DAAS,CAAEqH,CAAD,IAAS;AACjB,UAAG,CAAC,KAAKhB,KAAL,CAAWvC,WAAf,EAA2B;AACzB,eAAOjE,wCAAE,CAACwH,CAAD,CAAT;AACD;;AACD,aAAO,KAAK3B,cAAL,CAAoB,KAAKW,KAAL,CAAWvC,WAA/B,EAA4CV,IAA5C,CACL8C,2DAAW,EADN,CAAP;AAGD,KAPQ,CADgC,CAApC;AAiBA,wBAAmC,KAAKoB,iBAAL,CAAuB;AAACC,WAAK,EAAE,YAAR;AAAsBC,YAAM,EAAE;AAA9B,KAAvB,EAA8DpE,IAA9D,CACxCnD,oDAAG,CAAEoH,CAAD,IAAS;AACX,WAAKI,KAAL,CAAW5D,IAAX,CAAgBwD,CAAC,CAAClC,MAAlB;AAED,KAHE,CADqC,EAKxCe,2DAAW,EAL6B,CAAnC;AAOA,qBAAgC,KAAKxC,WAAL,CAAiBhD,YAAjB,GAAgC0C,IAAhC,CACrCrD,mDAAG,CAAE2H,KAAD,IAAkB;AACpB,aAAOA,KAAK,CAACb,MAAN,CAAaH,CAAC,IAAG;AAAA;;AAAC,sBAAC,CAACM,IAAF,MAAM,IAAN,IAAMW,aAAN,GAAM,MAAN,GAAMA,GAAEV,QAAF,CAAW,SAAX,CAAN;AAA2B,OAA7C,CAAP;AACD,KAFE,CADkC,CAAhC;AAKC,uBAAuC,IAAItH,iDAAJ,CAA4B,EAA5B,CAAvC;AACD,kBAA6B,KAAKiI,WAAL,CAAiBlH,YAAjB,GAAgC0C,IAAhC,CAClCpD,0DAAS,CAAEqD,GAAD,IAAW,KAAKwE,WAAL,EAAZ,CADyB,EAElC3B,2DAAW,CAAC,CAAD,CAFuB,CAA7B;AAOuF;;AA3BjF4B,oBAAkB;AAAA;;AAAA;AAC7B,mBAAa,IAAI1H,uFAAJ,GAAkB4B,QAAlB,GAA6BC,IAA7B,CAAkCD,QAAQ,IAAG;AACxD,aAAI,CAAC+F,MAAL,CAAYlE,IAAZ,CAAiB7B,QAAjB;;AACC,eAAOA,QAAP;AACF,OAHY,CAAb;AAD6B;AAK9B;;AAmBYgG,UAAQ;AAAA;AACnB,mBAAa,IAAI5H,uFAAJ,GAAkB4B,QAAlB,EAAb;AADmB;AAEpB;;AAEOiG,eAAa,CAACxH,IAAD,EAAW;AAC9B,WAAO,KAAKD,IAAL,CAAU0C,IAAV,CAAe,GAAG,KAAKC,MAAM,QAA7B,EAAuC1C,IAAvC,EAA6C2C,IAA7C,CACLrD,mDAAG,CACAsD,GAAD,IAAa;AACX,YAAM6E,YAAY,GAAG,KAAKxE,WAAL,CAAiByE,QAAjB,EAArB;AACAD,kBAAY,CAACtE,IAAb,CAAkBP,GAAlB;AACA,WAAKK,WAAL,CAAiBG,IAAjB,CAAsBqE,YAAtB;AACA,aAAO;AACL5E,cAAM,EAAE,KADH;AAELC,gBAAQ,EAAE,4CAFL;AAGL9C,YAAI,EAAE4C;AAHD,OAAP;AAKD,KAVA,CADE,CAAP;AAcD;;AACO+E,eAAa,CAAC3H,IAAD,EAAW;AAC9B,WAAO,KAAKD,IAAL,CAAU6H,KAAV,CAAgB,GAAG,KAAKlF,MAAM,UAAU1C,IAAI,CAACmE,EAAE,EAA/C,EAAmDnE,IAAnD,EAAyD2C,IAAzD,CACLrD,mDAAG,CACAsD,GAAD,IAAa;AACX,aAAO;AACLC,cAAM,EAAE,KADH;AAELC,gBAAQ,EAAE,yCAFL;AAGL9C,YAAI,EAAE4C;AAHD,OAAP;AAKD,KAPA,CADE,CAAP;AAWD;;AACOiF,eAAa,CAACtB,IAAD,EAAW;AAC9B,WAAO,KAAKxG,IAAL,CAAU0C,IAAV,CAAe,GAAG,KAAKC,MAAM,QAA7B,EAAuC6D,IAAvC,EAA6C5D,IAA7C,CACLrD,mDAAG,CACAsD,GAAD,IAAa;AACX,aAAO;AACLC,cAAM,EAAE,KADH;AAELC,gBAAQ,EAAE,GAAGF,GAAG,CAACkF,IAAI,4BAFhB;AAGLvB,YAAI,EAAE3D;AAHD,OAAP;AAKD,KAPA,CADE,EAULpD,oDAAG,CACAoD,GAAD,IAAW;AACT,YAAM6E,YAAY,GAAG,KAAKN,WAAL,CAAiBO,QAAjB,EAArB;AACAD,kBAAY,CAACM,OAAb,CAAqBnF,GAAG,CAAC2D,IAAzB;AACA,WAAKY,WAAL,CAAiB/D,IAAjB,CAAsBqE,YAAtB;AACD,KALA,CAVE,CAAP;AAkBD;;AAEDO,kBAAgB;AACd,WAAO,KAAK/E,WAAL,CAAiBC,KAAxB;AACD;;AAED+E,YAAU;AACR,SAAKjI,IAAL,CAAUoD,IAAV,CAAesC,gDAAf;;AACA,QAAG,KAAKE,KAAL,CAAWvC,WAAd,EAA0B;AACxB,WAAKuC,KAAL,CAAWjC,gBAAX;AACD;AACF;;AACDuE,YAAU,CAAC3B,IAAD,EAAW;AACnB,UAAM4B,aAAa,GAAG,KAAKC,QAAL,CAAsB7B,IAAI,CAACuB,IAA3B,CAAtB;;AACA,QAAI,CAACK,aAAL,EAAoB;AAClB,aAAO,KAAKN,aAAL,CAAmBtB,IAAnB,CAAP;AACD,KAFD,MAEO;AACL,aAAOnH,wCAAE,CAAC;AACRyD,cAAM,EAAE,KADA;AAERC,gBAAQ,EAAE,sBAAsByD,IAAI,CAACuB,IAAI;AAFjC,OAAD,CAAT;AAID;AACF;;AACDO,cAAY,CAACC,MAAD,EAAW;AACrB,SAAK5B,SAAL,CAAetD,IAAf,CAAoBkF,MAApB;AACD;;AACDF,UAAQ,CAACN,IAAD,EAAa;AACnB,WAAO,KAAKX,WAAL,CAAiBjE,KAAjB,CAAuBqF,IAAvB,CACJhC,IAAD,IAAyBA,IAAI,CAACuB,IAAL,CAAWU,IAAX,GAAkBC,WAAlB,MAAmCX,IAAI,CAACU,IAAL,GAAYC,WAAZ,EADvD,CAAP;AAGD;;AACDxD,gBAAc,CAACrD,KAAD,EAAW;AACvB,QAAIyC,YAAY,GAAG,IAAI5E,6DAAJ,GAAiB6E,GAAjB,CAAqB,YAArB,EAAmC1C,KAAnC,CAAnB;AACA,WAAO,KAAK7B,IAAL,CAAUyE,GAAV,CAAc,GAAG,KAAK9B,MAAM,QAA5B,EAAsC;AAAE+B,YAAM,EAAEJ;AAAV,KAAtC,CAAP;AACD,GApJqB,CAqJtB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACAqE,aAAW;AACT,WAAO,KAAK3I,IAAL,CAAUyE,GAAV,CAAc,GAAG,KAAK9B,MAAM,QAA5B,EAAsCC,IAAtC,CACLnD,oDAAG,CAAEoH,CAAD,IAAS;AACX,WAAKI,KAAL,CAAW5D,IAAX,CAAgBwD,CAAC,CAAClC,MAAlB;AACD,KAFE,CADE,CAAP;AAKD;;AACDmC,mBAAiB,CAACpC,MAAD,EAAW;AAC1B,WAAO,KAAK1E,IAAL,CAAUyE,GAAV,CAAc,GAAG,KAAK9B,MAAM,QAA5B,EAAsC;AAAE+B;AAAF,KAAtC,CAAP;AACD;;AACD2C,aAAW;AACT,WAAO,KAAKrH,IAAL,CAAUyE,GAAV,CAAc,GAAG,KAAK9B,MAAM,QAA5B,CAAP;AACD;;AACDoD,aAAW;AACT,WAAO,KAAK/F,IAAL,CAAUyE,GAAV,CAAc,GAAG,KAAK9B,MAAM,QAA5B,CAAP;AACD;;AACDiG,cAAY,CAACC,IAAD,EAAS;AACnB,WAAO,KAAK7I,IAAL,CAAUyE,GAAV,CAAc,GAAG,KAAK9B,MAAM,QAA5B,EAAsC;AAAC+B,YAAM,EAAEmE;AAAT,KAAtC,CAAP;AACD;;AACDC,cAAY,CAACD,IAAD,EAAS;AACnBA,QAAI,mCAAOA,IAAP,GAAW;AAAEE,SAAG,EAAE,KAAK5C,OAAL,GAAe6C,IAAtB;AAA4BC,aAAO,EAAE1F,YAAY,CAACC,OAAb,CAAqB,gBAArB;AAArC,KAAX,CAAJ;AACA,WAAO,KAAKxD,IAAL,CAAU0C,IAAV,CAAe,GAAG,KAAKC,MAAM,YAA7B,EAA2CkG,IAA3C,CAAP;AACD;;AACDK,YAAU,CAACjJ,IAAD,EAAYuG,IAAZ,EAAwB;AAChC,WAAO,KAAKiB,aAAL,CAAmBxH,IAAnB,CAAP;AACD;;AACDkJ,YAAU,CAAClJ,IAAD,EAAU;AAClBA,QAAI,CAACmJ,UAAL,GAAkB,IAAI9G,IAAJ,CAASA,IAAI,CAAC+G,GAAL,EAAT,EAAqBC,WAArB,EAAlB;AACA,WAAO,KAAK1B,aAAL,CAAmB3H,IAAnB,CAAP;AACD;;AACDsJ,UAAQ,CAAC1H,KAAD,EAAc;AACpB,WAAO,KAAKqB,WAAL,CAAiBC,KAAjB,CAAuBqF,IAAvB,CACJvI,IAAD,IAAe;AAAA;;AAAC,uBAAI,CAAC4B,KAAL,MAAU,IAAV,IAAUsF,aAAV,GAAU,MAAV,GAAUA,GAAEsB,IAAF,GAASe,iBAAT,GAA6B/C,QAA7B,CAAsC5E,KAAK,CAAC4G,IAAN,GAAaC,WAAb,EAAtC,CAAV;AAA2E,KADtF,CAAP;AAGD;;AACDe,aAAW,CAAC5H,KAAD,EAAc;AACvB,WAAO,KAAK7B,IAAL,CAAUyE,GAAV,CAAc,GAAG,KAAK9B,MAAM,qBAAqBd,KAAK,EAAtD,CAAP;AACD;;AACD6H,oBAAkB,CAAClD,IAAD,EAAa;AAC7B,WAAO,KAAKvG,IAAL,CAAUC,YAAV,GAAyB0C,IAAzB,CACLrD,mDAAG,CAAEoK,KAAD,IAAiB,CAACA,KAAD,GAAS,KAAT,GAAiBA,KAAK,CAACnD,IAAN,CAAWjH,GAAX,CAAeqK,EAAE,IAAEA,EAAE,CAAClB,WAAH,GAAiBD,IAAjB,EAAnB,EAA4ChC,QAA5C,CAAqDD,IAAI,CAACkC,WAAL,EAArD,CAAnC,CADE,CAAP;AAGD;;AAEDmB,SAAO,CAAC5J,IAAD,EAAU;AACf,SAAKA,IAAL,CAAUoD,IAAV,CAAepD,IAAf;AACD;;AACDkG,SAAO;AACL,WAAO,KAAKlG,IAAL,CAAUkD,KAAjB;AACD;;AAEe,MAAZ2G,YAAY;AACd,WAAO,KAAKC,aAAL,CAAmB5G,KAA1B;AACD;;AAEkB,MAAf6G,eAAe,CAAC/J,IAAD,EAAW;AAC5B,UAAMiH,KAAK,GAAG,KAAK4C,YAAnB;AACA5C,SAAK,CAAC3C,GAAN,CAAUtE,IAAI,CAAC+I,IAAf,EAAqB/I,IAArB;;AACA,SAAK8J,aAAL,CAAmB1G,IAAnB,CAAwB6D,KAAxB;AACD;;AA5NqB;;;mBAAXtB,aAAWL,uDAAAA,CAAAA,6DAAAA,GAAAA,uDAAAA,CAAAA,+CAAAA,GAAAA,uDAAAA,CAAAA,2DAAAA;AAAA;;;SAAXK;AAAWJ,WAAXI,WAAW;AAAAH,cAFV;;;;;;;;;;;;;;;;ACZd,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,kBAAkB,EAAE,iDAAiD;IACrE,mBAAmB,EAAE,iDAAiD;IACtE,GAAG,EAAE,uBAAuB;IAC5B,QAAQ,EAAE,uBAAuB;IACjC,SAAS,EAAE,uBAAuB;IAClC,6CAA6C;IAC7C,uDAAuD;IACvD,wDAAwD;IACxD,OAAO,EAAE,QAAQ;IACjB,YAAY,EAAE,0BAA0B;IACxC,YAAY,EAAC,EAAE;IACf,SAAS,EAAE,uBAAuB;CACnC,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;AC3BvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/interceptors/device-info.interceptor.ts","./src/app/shared/interceptors/error.interceptor.ts","./src/app/shared/interceptors/header.interceptor.ts","./src/app/shared/interceptors/loader.interceptor.ts","./src/app/shared/interceptors/url-caching.interceptor.ts","./src/app/shared/models/Document.ts","./src/app/shared/models/Index.ts","./src/app/shared/models/User.ts","./src/app/shared/services/Index.ts","./src/app/shared/services/auth/auth.service.ts","./src/app/shared/services/client/app.service.ts","./src/app/shared/services/client/cache-registration.service.ts","./src/app/shared/services/user/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'auth',\r\n    loadChildren: ()=> import('./auth/auth.module').then(m => m.AuthModule)\r\n  },\r\n  {\r\n    path: 'admin',\r\n    loadChildren: ()=> import('./admin/admin.module').then(m => m.AdminModule)\r\n  },\r\n  {\r\n    path: '',\r\n    loadChildren: ()=> import('./client/client.module').then(m => m.ClientModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { ChangeDetectorRef, Component, OnDestroy } from '@angular/core';\nimport {MediaMatcher} from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent  implements OnDestroy{\n  title = 'Sparklingv2';\n  mobileQuery: MediaQueryList;\n  fillerNav = [\n    'Home',\n    'Services',\n    'Pricing',\n    'Get Quote',\n    'About us',\n    'FAQ',\n    'Login / Register',\n    'Dashboard',\n  ];\n\n  fillerContent = Array.from(\n    {length: 8},\n    (_, i) =>\n      `Index: ${i}`,\n  );\n\n  private _mobileQueryListener: () => void;\n  constructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n  ngOnDestroy(): void {\n    \n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n}\n","\r\n <div>\r\n  <router-outlet></router-outlet>\r\n  <simple-notifications></simple-notifications>\r\n </div>\r\n","import {  NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { SimpleNotificationsModule } from 'angular2-notifications';\r\nimport { ErrorInterceptor } from './shared/interceptors/error.interceptor';\r\nimport { DeviceInfoInterceptor } from './shared/interceptors/device-info.interceptor';\r\nimport { UrlCachingInterceptor } from './shared/interceptors/url-caching.interceptor';\r\nimport { HeaderInterceptor } from './shared/interceptors/header.interceptor';\r\nimport { LoaderInterceptor } from './shared/interceptors/loader.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    SimpleNotificationsModule.forRoot()\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: DeviceInfoInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: UrlCachingInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HeaderInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","\r\nimport { DeviceDetectorService } from 'ngx-device-detector';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpClient\r\n} from '@angular/common/http';\r\nimport { from, Observable, of, timer } from 'rxjs';\r\nimport { first, map, mergeMap, switchMap, timeout } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class DeviceInfoInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private deviceDetectorService: DeviceDetectorService,private http: HttpClient) {}\r\n  // This interceptor makes user of the ngx-device-detector to detect device info\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    let requestClone  = request.clone();\r\n    if(request.method == \"POST\"){\r\n      requestClone = this.handleBodyIn(requestClone, this.deviceDetectorService.userAgent, 'user_agent');\r\n      requestClone = this.handleBodyIn(requestClone, this.deviceDetectorService.browser_version, 'browserVersion');\r\n      requestClone = this.handleBodyIn(requestClone, this.deviceDetectorService.os, 'os');\r\n      requestClone = this.handleBodyIn(requestClone, this.deviceDetectorService.os_version, 'osVersion');\r\n      requestClone = this.handleBodyIn(requestClone, this.deviceDetectorService.browser, 'browser');\r\n      requestClone = this.handleBodyIn(requestClone, this.deviceDetectorService.orientation, 'deviceOrientation');\r\n      }\r\n    return next.handle(requestClone);\r\n  }\r\n  handleBodyIn(req:HttpRequest<any>, tokenToAdd:any, tokenName:string) {\r\n    if (req.method.toLowerCase() === 'post') {\r\n      if (req.body instanceof FormData) {\r\n        req =  req.clone({\r\n          body: req.body.append(tokenName, tokenToAdd)\r\n        })\r\n      } else {\r\n        const foo:any = {};\r\n        foo[tokenName] = tokenToAdd;\r\n        req =  req.clone({\r\n          body: {...req.body, ...foo}\r\n        })\r\n      }\r\n    }\r\n    if (req.method.toLowerCase() === 'get') {\r\n      req = req.clone({\r\n        params: req.params.set(tokenName, tokenToAdd)\r\n      });\r\n    }\r\n    return req;\r\n  }\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { timeout, catchError, retry } from 'rxjs/operators';\r\n\r\n// @Injectable()\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor() {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    return this.handler(next, request);\r\n  }\r\n  handler(next: HttpHandler, request: HttpRequest<unknown>) {\r\n    return next.handle(request)\r\n      .pipe(\r\n        retry(1),\r\n        catchError((httpError: any) => {\r\n          console.log(httpError);\r\n          return throwError(httpError);\r\n        })\r\n      ).pipe(\r\n        timeout(30000),\r\n        catchError((httpError: any) => {\r\n          console.log(httpError);\r\n          return throwError(httpError);\r\n\r\n        })\r\n      )\r\n  }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, switchMap, shareReplay } from 'rxjs/operators';\r\nimport { UserService } from '../services/user/user.service';\r\nimport { AuthService } from '../services/Index';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class HeaderInterceptor implements HttpInterceptor {\r\n  user$: Observable<any> = this._us.getAuthUserApi(this._auth.sessionAuth).pipe(\r\n    map((res: any[]) => res.pop())\r\n  ).pipe(\r\n    shareReplay(1)\r\n  );\r\n  constructor(private _us: UserService, private _auth: AuthService, private router: Router) { }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    if (request.method == \"POST\") {\r\n      return this.handleRequest(request, next);\r\n     \r\n    }\r\n    return next.handle(request);\r\n  }\r\n\r\n  handleRequest(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    let requestClone: any = request.clone();\r\n    let user = this._us.getuser();\r\n    if (!user || !user.code) {\r\n      return this.user$.pipe(\r\n        switchMap((res: any) => {\r\n          if (res && res.id) {\r\n            this._us.setuser(res);\r\n            if (request.body instanceof FormData) {\r\n              requestClone = request.clone({\r\n                body: request.body.append('who', res.code)\r\n              })\r\n            } else {\r\n              const body = Object.assign({who: user.code}, request.body);\r\n              requestClone = request.clone({body})\r\n            }\r\n          }\r\n          return next.handle(requestClone);\r\n        })\r\n      )\r\n    } else {\r\n      if (request.body instanceof FormData) {\r\n        requestClone = request.clone({\r\n          body: request.body.append('who', user.code)\r\n        })\r\n      } else {\r\n        const body = Object.assign({who: user.code}, request.body);\r\n        requestClone = request.clone({body})\r\n      }\r\n    }\r\n    return next.handle(requestClone);\r\n  }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpResponse,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, timeout } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoaderInterceptor implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    return this.handler(next, request);\r\n  }\r\n  handler(next: HttpHandler, request: HttpRequest<unknown>) {\r\n    return next.handle(request).pipe(\r\n      timeout(30000),\r\n      tap(evt => {\r\n\r\n      }));\r\n  }\r\n}\r\n","import { environment } from 'src/environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpResponse\r\n} from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { CacheRegistrationService } from '../services/client/cache-registration.service';\r\n\r\nconst TTL = 96;\r\n// List of url to not cache\r\nconst uncacheUrl = [\r\n  `${environment.api}/auth/login`,\r\n  `${environment.api}/auth/update/guest/profile`,\r\n  `${environment.api}/auth/register`\r\n]\r\n\r\n@Injectable()\r\nexport class UrlCachingInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private cacheRegistrationService: CacheRegistrationService) {\r\n}\r\n  public  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const cachedResponse = this.cacheRegistrationService.get(req.url);\r\n    if (cachedResponse && cachedResponse.url) {\r\n      if(uncacheUrl.includes(cachedResponse.url)) {\r\n        return of(cachedResponse);\r\n      }\r\n    }\r\n    return this.sendRequest(req, next);\r\n    // return cachedResponse\r\n        // '?' of(cachedResponse)\r\n    //     : this.sendRequest(req, next);\r\n  }\r\n  sendRequest(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n    ): Observable<HttpEvent<any>> {\r\n      return next.handle(req).pipe(\r\n        tap(evt => {\r\n          if (evt instanceof HttpResponse) {\r\n                this.cacheRegistrationService.set(req.url, evt, TTL);\r\n          }\r\n        }));\r\n  }\r\n}\r\n","export class Document {\r\n    id: any;\r\n    children: Document[] = [];\r\n    name: string = '';\r\n    private _created_at: Date;\r\n    private _updated_at: Date;\r\n    status: string = 'unsaved';\r\n    type: string = '';\r\n\r\n    constructor(){\r\n        this.id = Math.random() * (324234 - 12) + 12;\r\n        this._created_at = new Date(Date.now());\r\n        this._updated_at = this.created_at;\r\n    }\r\n\r\n    get created_at(){\r\n        return this._created_at;\r\n    }\r\n\r\n    get updated_at(){\r\n        return this._updated_at;\r\n    }\r\n\r\n}","import {User, GUESS} from './User';\r\nimport {Role} from './Role'\r\nimport {Script} from './Script'\r\nimport {Menu} from './Menu'\r\nimport {Plan} from './Plan'\r\nimport {Booking} from './Booking'\r\nimport {Notification} from './Notification'\r\nimport {Preference} from './Preference'\r\nimport {Company} from './Company'\r\nimport {Document} from './Document'\r\nimport {Department} from './Department'\r\nimport {App} from './App'\r\nimport {File} from './File'\r\nimport {Message} from './Message'\r\nimport {JobApplication} from './JobApplication'\r\nexport {\r\n    App,\r\n    File,\r\n    User,\r\n    Role,\r\n    Plan,\r\n    Menu,\r\n    GUESS,\r\n    Script,\r\n    Company,\r\n    Booking,\r\n    Preference,\r\n    Department,\r\n    Notification,\r\n    JobApplication,\r\n    Message,\r\n    Document as DocumentNode,\r\n}","// PassageUserInfo\r\nimport { PassageUserInfo } from '@passageidentity/passage-elements/passage-user';\r\nexport interface Credential {\r\n  credentialId: Uint8Array;\r\n  publicKey: Uint8Array;\r\n}\r\ninterface User extends PassageUserInfo {\r\n    code: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    update_at: string;\r\n    created_at: string;\r\n    country: string;\r\n    password: any;\r\n    state?: string;\r\n    city?: string;\r\n    address?: string;\r\n    date_of_employment?: string;\r\n    dob?: string;\r\n    authToken?: string;\r\n    role: string[];\r\n    who: any;\r\n    credentials?: Credential[];\r\n}\r\n\r\n\r\nconst GUESS: User = {\r\n  firstName: '',\r\n  code: '',\r\n  lastName: '',\r\n  country: '',\r\n  phone: '',\r\n  email: '',\r\n  password: '',\r\n  created_at: '',\r\n  role: [],\r\n  status: '',\r\n  authToken: '',\r\n  id: '',\r\n  who: null,\r\n  email_verified: false,\r\n  phone_verified: false,\r\n  webauthn: false,\r\n  webauthn_devices: [],\r\n  last_login_at: '',\r\n  login_count: 0,\r\n  user_metadata: null,\r\n  webauthn_types: [],\r\n  update_at: ''\r\n}\r\n\r\n  export {\r\n    User,\r\n    GUESS\r\n  }","import { AuthService } from \"./auth/auth.service\";\r\n\r\nexport {\r\n    AuthService\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject, throwError, of, from } from 'rxjs';\r\nimport { map, switchMap, tap, shareReplay } from 'rxjs/operators';\r\nimport { User } from '../../models/Index';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PassageUser, PassageUserInfo } from '@passageidentity/passage-elements/passage-user';\r\nimport { Passage, PassageAppInfo, authResult, PassageTokenStore } from '@passageidentity/passage-js';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  user: BehaviorSubject<any> = new BehaviorSubject<any>({});\r\n  listOfUsers: BehaviorSubject<User[]> = new BehaviorSubject<User[]>([]);\r\n  public user$: Observable<User> = this.user.asObservable();\r\n  apiUrl: string = environment.api;\r\n  isAuthenticated: boolean = false;\r\n  public username: string | undefined = '';\r\n  public isLoading: boolean = true;\r\n  public appId: string = environment.passageAppId;\r\n  passage = new Passage(this.appId);\r\n  private _passage:Passage = this.passage;\r\n  // private attemptRegisterKey$: Observable<any> = from( this.registerPasskey()).pipe(shareReplay(1))\r\n  constructor(private http: HttpClient) {\r\n    // this.attemptRegisterKey$.subscribe()\r\n  }\r\n\r\n  async showEnablePasskey(identifier) {\r\n    const user = await this.passage.identifierExists(identifier)\r\n\r\n    // If the user's device is capable of registering a passkey\r\n    // and they have yet to register a passkey\r\n    if (!user?.hasPasskey && (await this.passage.createCredentialAvailable()).isAvailable)\r\n      return true\r\n\r\n    return false\r\n  }\r\n\r\n  async registerPasskey() {\r\n    // Get or Create Current User within Passage Express Authorizer Function\r\n    const passageUser:any = this.passage.getCurrentUser();\r\n    // If your Authorizer Function denies the request.\r\n    // getCurrentUser will return null.\r\n    if (!passageUser) {\r\n      return throwError(new Error(\"Failed to Get or Create Passage User\"));\r\n    };\r\n    this._passage = new Passage(this.appId, passageUser.tokenStore);\r\n    // console.log(passageUser)\r\n    // console.log(this._passage)\r\n    // console.log(this.passage)\r\n    try {\r\n      const passkey = await this._passage.getCurrentUser().addDevice();\r\n      // console.log(passkey)\r\n      return of(passkey);\r\n      // Show passkey has successfully been registered\r\n    } catch (e) {\r\n      // console.log(JSON.stringify(e))\r\n      return throwError(new Error(`Opps, Issues with user browser. Possible reasons: 1. User Device does not support webauthn 2. User cancels the register passkey flow 3. Network request error.`));\r\n    }\r\n  }\r\n  public async isLoggedIn(): Promise<boolean> {\r\n    this.isLoading = true;\r\n    return await new PassageUser().userInfo().then(userInfo => {\r\n\r\n      if (userInfo !== undefined) {\r\n        this.isLoading = false;\r\n        this.isAuthenticated = true;\r\n        this.username = userInfo.email ? userInfo.email : userInfo.phone;\r\n      } else {\r\n        this.isLoading = false;\r\n        this.isAuthenticated = false;\r\n        this.username = '';\r\n      }\r\n      return this.isAuthenticated;\r\n\r\n    })\r\n  }\r\n  public async passageAppInfo(): Promise<PassageAppInfo> {\r\n    return await this._passage.appInfo()\r\n  }\r\n  public async passageLogin(data: string): Promise<authResult> {\r\n    return await this._passage.register(data)\r\n    // return await this._passage.login(data)\r\n  }\r\n  private generateAuthToken(): string {\r\n    let date = new Date();\r\n    return `Auth-${date.getTime().toString()}-temp-session`;\r\n  }\r\n  private registerApi(user: any) {\r\n    return this.http.post(`${this.apiUrl}/users`, user).pipe(\r\n      map(\r\n        (res: any) => {\r\n\r\n          return {\r\n            status: '200',\r\n            response: 'User successfully registered in the server',\r\n            user,\r\n            res\r\n          }\r\n        }\r\n      ),\r\n      tap(\r\n        (result: any) => {\r\n          let list = this.listOfUsers.value;\r\n          list.push(result.res);\r\n          this.listOfUsers.next(list);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  get sessionAuth(): any {\r\n    return localStorage.getItem('_authToken');\r\n  }\r\n  setsessionAuth(token: string) {\r\n    localStorage.setItem('_authToken', token)\r\n  }\r\n  clearsessionAuth() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n  }\r\n  logout() {\r\n    return this.deleteAuthTokenApi(this.sessionAuth).pipe(\r\n      tap((res: any) => {\r\n        this.clearsessionAuth();\r\n        this.user.next(undefined);\r\n        this._clearsession();\r\n      })\r\n    )\r\n  }\r\n  private _clearsession() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  private authticateUserApi(user: User) {\r\n    let authUser: any = user;\r\n    authUser.id = undefined;\r\n    return this.http.post(`${this.apiUrl}/auth`, user).pipe(\r\n      map(\r\n        (res: any) => {\r\n\r\n          return {\r\n            status: '200',\r\n            response: 'User successfully authenticated',\r\n            user: res,\r\n            res\r\n          }\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  private loginApi(user: any): Observable<any> {\r\n    let headerParams = new HttpParams().set('email', user.email).set('password', user.password);\r\n    return this.http.get(`${this.apiUrl}/users`, { params: headerParams }).pipe(\r\n      map(\r\n        (res: any) => {\r\n          if (res.length < 1) {\r\n            return {\r\n              status: false,\r\n              message: 'Incorrect credentials. No user found'\r\n            }\r\n          }\r\n          return {\r\n            status: true,\r\n            message: 'User exist',\r\n            user: res[0]\r\n          }\r\n        }\r\n      ),\r\n      switchMap((response: any) => {\r\n        if (response.status) {\r\n          return from(this.passageLogin(user.email)).pipe(\r\n            switchMap((result:any)=>{\r\n              if (result.auth_token) {\r\n                let ru = response.user;\r\n                let toret = {...ru, authToken:result.auth_token, auth_token: result.auth_token}\r\n                return this.authticateUserApi(toret).pipe(\r\n                  tap((_response: any) => {\r\n                    this.setsessionAuth(_response.res.authToken);\r\n                    this.user.next(_response.res);\r\n                  })\r\n                );\r\n              }\r\n              return of(\r\n                {\r\n                  status: '403',\r\n                  response: result\r\n                }\r\n              )\r\n            })\r\n          );\r\n        }\r\n        return of(\r\n          {\r\n            status: '403',\r\n            response: response.message\r\n          }\r\n        )\r\n      })\r\n    );\r\n  }\r\n\r\n  getAuthUserApi(token: any): Observable<any> {\r\n    let headerParams = new HttpParams().set('authToken', token);\r\n    return this.http.get(`${this.apiUrl}/auth`, { params: headerParams })\r\n  }\r\n  private deleteAuthTokenApi(token: any): Observable<any> {\r\n    if (token) {\r\n      return this.getAuthUserApi(token).pipe(\r\n        map((res: any[]) => res.pop()),\r\n        switchMap((result: any) => {\r\n          if (result.id) {\r\n            return this.http.delete(`${this.apiUrl}/auth/${result.id}`).pipe(\r\n              map(res => {\r\n                return {\r\n                  status: '200',\r\n                  response: 'Successfully logged out user',\r\n                  data: res\r\n                }\r\n              })\r\n            )\r\n          }\r\n          return of(\r\n            {\r\n              status: '403',\r\n              response: 'Invalid user in session'\r\n            }\r\n          )\r\n        })\r\n      )\r\n    }\r\n    return of(\r\n      {\r\n        status: '403',\r\n        response: 'Invalid token in session'\r\n      }\r\n    )\r\n  }\r\n  private getUserByEmailApi(email: any): Observable<any> {\r\n    let headerParams = new HttpParams().set('email', email);\r\n    return this.http.get(`${this.apiUrl}/users`, { params: headerParams })\r\n  }\r\n  register(data: any) {\r\n    return this.getUserByEmailApi(data.email).pipe(\r\n      switchMap((response: any) => {\r\n        if (response && response.length > 0) {\r\n          return throwError({\r\n            status: '500',\r\n            response: 'User with email already exists'\r\n          });\r\n        }\r\n        return this.registerApi(data);\r\n      })\r\n    )\r\n\r\n  }\r\n  login(data: User) {\r\n    return this.loginApi(data);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject, Subject, throwError, of } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { tap, map, shareReplay, switchMap, distinctUntilChanged } from 'rxjs/operators';\r\nimport { Plan, App } from '../../models/Index';\r\n\r\ndeclare const $:any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n  private apiUrl: string = environment.api;\r\n  private _ongoingApp: Subject<App> = new Subject<any>();\r\n  private _ongoingAppSub: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  private _subscribedApps: Subject<Map<string, any>> = new Subject<Map<string, any>>();\r\n  subscribedApps$: Observable<Map<string, any>> = this._subscribedApps.asObservable();\r\n  onoingApp$: Observable<App> = this._ongoingApp.asObservable();\r\n  listOfApps:BehaviorSubject<App[]> = new BehaviorSubject<App[]>([]);\r\n  private _listOfSubscribedApps:BehaviorSubject<App[]> = new BehaviorSubject<App[]>([]);\r\n  listOfSubscribedApps$: Observable<any[]> = this._listOfSubscribedApps.asObservable();\r\n  selectedApp:BehaviorSubject<App | undefined> = new BehaviorSubject<App| undefined>(undefined);\r\n  private getAppsApi$: Observable<App[]> = this.getAppsApi().pipe( shareReplay(1) );\r\n  apps$: Observable<App[]> = this.getAppsApi$.pipe(\r\n    shareReplay(),\r\n    tap((res:any)=>{\r\n      this.listOfApps.next(res);\r\n    })\r\n  );\r\n  constructor(private http: HttpClient ) { }\r\n  private getAppsApi(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/apps`)\r\n  }\r\n  getAppSubscriptionApi(sort:any): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/subscriptions`, {params: sort})\r\n  }\r\n  getAndSetOngoingAppSubscriptionApi(sort:any): Observable<any> {\r\n    return this.getAppSubscriptionApi(sort).pipe(\r\n      map((r:any[])=>r.pop())\r\n    )\r\n  }\r\n  saveLocalApp(app:App){\r\n    sessionStorage.setItem('runningApp', JSON.stringify(app));\r\n  }\r\n  subscribe(data:any){\r\n    return this.http.post(`${this.apiUrl}/subscriptions`,data)\r\n  }\r\n\r\n  getLocalApp(){\r\n    let getLocalApp:any=  sessionStorage.getItem('runningApp');\r\n    let toReturn:App | null = null;\r\n    if(getLocalApp){\r\n      try {\r\n        getLocalApp = JSON.parse(getLocalApp);\r\n        toReturn = getLocalApp;\r\n      } catch (error) {\r\n        sessionStorage.removeItem('runningApp');\r\n        getLocalApp = null;\r\n      }\r\n    }\r\n    return toReturn;\r\n  }\r\n  set appcode(code:any){\r\n    localStorage.setItem('appcode', code);\r\n  }\r\n  removeappcode(){\r\n    localStorage.removeItem('appcode');\r\n  }\r\n  get appcode(){\r\n    return localStorage.getItem('appcode');\r\n  }\r\n  get listOfAppsValue(){\r\n    return this.listOfApps.value;\r\n  }\r\n  get listOfSubscribedApps(){\r\n    return this._listOfSubscribedApps.value;\r\n  }\r\n  set onoingApp(app:any){\r\n    this._ongoingApp.next(app);\r\n  }\r\n  set onoingAppSub(app:any){\r\n    this._ongoingAppSub.next(app);\r\n  }\r\n  get ongoingAppSub(){\r\n    return this._ongoingAppSub.value;\r\n  }\r\n  set subscribedApps(app:any){\r\n    this._subscribedApps.next(app);\r\n  }\r\n  set listOfSubscribedApps(apps:any[]){\r\n    this._listOfSubscribedApps.next(apps);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CacheRegistrationService {\r\n\r\n  constructor() { }\r\n  private services: string[] = [];\r\n\r\n  private cache = new Map<string, [Date, HttpResponse<any>]>();\r\n\r\n    public addedToCache(serviceUri: string) {\r\n      return this.services.indexOf(serviceUri) > -1;\r\n    }\r\n\r\n    public addToCache(serviceUri: string) {\r\n      // Check if not already added to list\r\n      if (!this.addedToCache(serviceUri)) {\r\n        this.services.push(serviceUri);\r\n      }\r\n    }\r\n\r\n  get(key:any): HttpResponse<any> {\r\n      const tuple = this.cache.get(key);\r\n      if (!tuple) {return null as any; }\r\n\r\n      const expires = tuple[0];\r\n      const httpResponse = tuple[1];\r\n\r\n      // Don't observe expired keys\r\n      const now = new Date();\r\n      if (expires && expires.getTime() < now.getTime()) {\r\n          this.cache.delete(key);\r\n          return null as any;\r\n      }\r\n\r\n      return httpResponse;\r\n  }\r\n\r\n  set(key:any, value: any, ttl: number | null = null) {\r\n    const expires = new Date();\r\n    if (ttl) {\r\n        expires.setSeconds(expires.getHours() + ttl);\r\n        this.cache.set(key, [expires, value]);\r\n    } else {\r\n        expires.setHours(expires.getHours() + 72);\r\n        this.cache.set(key, [expires, value]);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject, throwError, of } from 'rxjs';\r\nimport { tap, map, shareReplay, switchMap, skipWhile } from 'rxjs/operators';\r\nimport { Role, User, Menu, GUESS, App } from '../../models/Index';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthService } from '../Index';\r\nimport { AppService } from '../client/app.service';\r\nimport { PassageUser, PassageUserInfo } from '@passageidentity/passage-elements/passage-user';\r\nimport { User  as _User} from '../../classes/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  apiUrl: string = environment.api;\r\n  $user_: BehaviorSubject<any> = new BehaviorSubject<any>({});\r\n  private user: BehaviorSubject<any> = new BehaviorSubject<any>({});\r\n  total: BehaviorSubject<number> = new BehaviorSubject<number>(0);\r\n  private listOfUsers: BehaviorSubject<User[]> = new BehaviorSubject<User[]>([\r\n  ]);\r\n  listOfEmpoyees: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([\r\n  ]);\r\n  private listOfMenu: BehaviorSubject<Menu[]> = new BehaviorSubject<Menu[]>([]);\r\n  private app_menus:BehaviorSubject<Menu[]> = new BehaviorSubject<Menu[]>([]);\r\n  public app_Menus$: Observable<Menu[]> =  this.getMenusApi().pipe(\r\n    map((res:any)=>{\r\n      const app:any = this._app.appcode;\r\n      const u:any = this.getuser();\r\n\r\n      const menusForAppndRole:any = app ? res.filter((m:any)=>{return (m.roles == 'everyone' || u.role.includes(m.roles)) && m.app_id ==  app}) : [];\r\n\r\n      this.app_menus.next(menusForAppndRole);\r\n      return this.app_menus.value;\r\n    }),\r\n    shareReplay(1)\r\n  );\r\n  public menu:Map<number, Menu[]> = new Map<number, Menu[]>()\r\n  public listOfViewedRoles: Map<string, Role> = new Map<string, Role>();\r\n  private _viewedusers$: BehaviorSubject<Map<string, User>> = new BehaviorSubject<Map<string, User>>(new Map());\r\n  public user$: Observable<User> = this.user.asObservable();\r\n  public list$: Observable<User[]> = this.listOfUsers.asObservable();\r\n  public getAuthUserApi$: Observable<User> = of(GUESS).pipe(\r\n    switchMap((r:any)=>{\r\n      if(!this._auth.sessionAuth){\r\n        return of(r);\r\n      }\r\n      return this.getAuthUserApi(this._auth.sessionAuth).pipe(\r\n        shareReplay()\r\n      );\r\n    })\r\n  );\r\n  public async getPassageUserInfo(): Promise<any> {\r\n    return await new PassageUser().userInfo().then(userInfo => {\r\n      this.$user_.next(userInfo);\r\n       return userInfo;\r\n    })\r\n  }\r\n\r\n  public getUsersApi$: Observable<User[]> = this.getSortedUsersApi({_sort: 'created_at', _order: 'desc'}).pipe(\r\n    tap((r:any)=>{\r\n      this.total.next(r.length);\r\n\r\n    } ),\r\n    shareReplay()\r\n  );\r\n  public cleaners$: Observable<User[]> = this.listOfUsers.asObservable().pipe(\r\n    map((users: User[]) => {\r\n      return users.filter(u => u.role?.includes('Cleaner'));\r\n    })\r\n  )\r\n  private listOfRoles: BehaviorSubject<Role[]> = new BehaviorSubject<Role[]>([]);\r\n  public roles$: Observable<Role[]> = this.listOfRoles.asObservable().pipe(\r\n    switchMap((res:any)=>this.getRolesApi()),\r\n    shareReplay(1)\r\n  );\r\n  public async getuser$(): Promise<PassageUserInfo | undefined> {\r\n    return await new PassageUser().userInfo();\r\n  }\r\n  constructor(private http: HttpClient, private _auth: AuthService, private _app: AppService) {}\r\n  private createUserApi(user: User) {\r\n    return this.http.post(`${this.apiUrl}/users`, user).pipe(\r\n      map(\r\n        (res: any) => {\r\n          const existingList = this.listOfUsers.getValue();\r\n          existingList.push(res);\r\n          this.listOfUsers.next(existingList);\r\n          return {\r\n            status: '200',\r\n            response: 'User successfully registered in the server',\r\n            user: res\r\n          }\r\n        }\r\n      )\r\n    );\r\n  }\r\n  private updateUserApi(user: User) {\r\n    return this.http.patch(`${this.apiUrl}/users/${user.id}`, user).pipe(\r\n      map(\r\n        (res: any) => {\r\n          return {\r\n            status: '200',\r\n            response: 'User successfully updated in the server',\r\n            user: res\r\n          }\r\n        }\r\n      )\r\n    );\r\n  }\r\n  private createRoleApi(role: Role) {\r\n    return this.http.post(`${this.apiUrl}/roles`, role).pipe(\r\n      map(\r\n        (res: any) => {\r\n          return {\r\n            status: '200',\r\n            response: `${res.name} role successfully created`,\r\n            role: res\r\n          }\r\n        }\r\n      ),\r\n      tap(\r\n        (res:any)=>{\r\n          const existingList = this.listOfRoles.getValue();\r\n          existingList.unshift(res.role);\r\n          this.listOfRoles.next(existingList);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  listOfUsersValue():User[]{\r\n    return this.listOfUsers.value;\r\n  }\r\n\r\n  forgetUser(){\r\n    this.user.next(GUESS);\r\n    if(this._auth.sessionAuth){\r\n      this._auth.clearsessionAuth();\r\n    }\r\n  }\r\n  createRole(role: Role) {\r\n    const doesRoleExist = this.findRole(<string>role.name);\r\n    if (!doesRoleExist) {\r\n      return this.createRoleApi(role);\r\n    } else {\r\n      return of({\r\n        status: '500',\r\n        response: `Role With the name ${role.name} already exists`\r\n      })\r\n    }\r\n  }\r\n  setapp_menus(values:any){\r\n    this.app_menus.next(values);\r\n  }\r\n  findRole(name: string) {\r\n    return this.listOfRoles.value.find(\r\n      (role: Role) => (<string>role.name).trim().toLowerCase() == name.trim().toLowerCase()\r\n    );\r\n  }\r\n  getAuthUserApi(email: any): Observable<any> {\r\n    let headerParams = new HttpParams().set('email_like', email);\r\n    return this.http.get(`${this.apiUrl}/users`, { params: headerParams })\r\n  }\r\n  // getOrCreate(email:string){\r\n  //   let headerParams = new HttpParams().set('email', email);\r\n  //   return this.http.get(`${this.apiUrl}/users`, { params: headerParams }).pipe(\r\n  //     switchMap(res=>{\r\n  //       if(UserService.length > 0){\r\n  //         return of(res);\r\n  //       }\r\n\r\n  //       return this._auth.register()\r\n  //     })\r\n  //   )\r\n  // }\r\n  getUsersApi(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/users`).pipe(\r\n      tap((r:any)=>{\r\n        this.total.next(r.length);\r\n      } )\r\n    )\r\n  }\r\n  getSortedUsersApi(params:any): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/users`, { params })\r\n  }\r\n  getRolesApi(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/roles`);\r\n  }\r\n  getMenusApi(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/menus`);\r\n  }\r\n  getMenusApi$(sort:any): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/menus`, {params: sort});\r\n  }\r\n  getEmployees(sort:any): Observable<any> {\r\n    sort = {...sort, who: this.getuser().code, company: localStorage.getItem('runningCompany')}\r\n    return this.http.post(`${this.apiUrl}/employees`, sort);\r\n  }\r\n  createUser(user: any, role: string) {\r\n    return this.createUserApi(user)\r\n  }\r\n  updateUser(user: any) {\r\n    user.updated_at = new Date(Date.now()).toISOString();\r\n    return this.updateUserApi(user)\r\n  }\r\n  findUser(email: string) {\r\n    return this.listOfUsers.value.find(\r\n      (user: User) => user.email?.trim().toLocaleLowerCase().includes(email.trim().toLowerCase())\r\n    );\r\n  }\r\n  findUserApi(email: string) {\r\n    return this.http.get(`${this.apiUrl}/users?email_like=${email}`)\r\n  }\r\n  checkIfUserHasRole(role: string): Observable<boolean>{\r\n    return this.user.asObservable().pipe(\r\n      map((_user: User) => !_user ? false : _user.role.map(_r=>_r.toLowerCase().trim()).includes(role.toLowerCase()))\r\n    );\r\n  }\r\n\r\n  setuser(user:User){\r\n    this.user.next(user);\r\n  }\r\n  getuser(){\r\n    return this.user.value;\r\n  }\r\n\r\n  get viewedusers$(){\r\n    return this._viewedusers$.value;\r\n  }\r\n\r\n  set setviewedusers$(user: User){\r\n    const users = this.viewedusers$;\r\n    users.set(user.code, user);\r\n    this._viewedusers$.next(users);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  flutter_public_key: 'FLWPUBK_TEST-6f6045944f247c7d04c3b7c1d73a2723-X',\r\n  flutter_private_key: 'FLWSECK_TEST-65474a7f10fa663422b0182f9cd9ed66-X',\r\n  api: 'http://localhost:3000',\r\n  emailApi: 'http://localhost:3003',\r\n  uploadApi: 'http://localhost:3002',\r\n  // api: 'https://zinder-server.onrender.com',\r\n  // emailApi: 'https://zinder-mail-server.onrender.com',\r\n  // uploadApi: 'https://zinder-file-server.onrender.com',\r\n  appName: 'Zinder',\r\n  passageAppId: '8nWALwN5Ot37pEsAmoh3fc2y',\r\n  teegramToken:'',\r\n  appDomain: 'http://localhost:5001'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["BehaviorSubject","throwError","of","from","map","switchMap","tap","HttpParams","environment","PassageUser","Passage","AuthService","constructor","http","user","asObservable","api","passageAppId","appId","passage","showEnablePasskey","identifier","identifierExists","hasPasskey","createCredentialAvailable","isAvailable","registerPasskey","passageUser","getCurrentUser","Error","_passage","tokenStore","passkey","addDevice","e","isLoggedIn","isLoading","userInfo","then","undefined","isAuthenticated","username","email","phone","passageAppInfo","appInfo","passageLogin","data","register","generateAuthToken","date","Date","getTime","toString","registerApi","post","apiUrl","pipe","res","status","response","result","list","listOfUsers","value","push","next","sessionAuth","localStorage","getItem","setsessionAuth","token","setItem","clearsessionAuth","clear","sessionStorage","logout","deleteAuthTokenApi","_clearsession","authticateUserApi","authUser","id","loginApi","headerParams","set","password","get","params","length","message","auth_token","ru","toret","authToken","_response","getAuthUserApi","pop","delete","getUserByEmailApi","login","i0","factory","providedIn","shareReplay","GUESS","UserService","_auth","_app","getMenusApi","app","appcode","u","getuser","menusForAppndRole","filter","m","roles","role","includes","app_id","app_menus","Map","r","getSortedUsersApi","_sort","_order","total","users","_a","listOfRoles","getRolesApi","getPassageUserInfo","$user_","getuser$","createUserApi","existingList","getValue","updateUserApi","patch","createRoleApi","name","unshift","listOfUsersValue","forgetUser","createRole","doesRoleExist","findRole","setapp_menus","values","find","trim","toLowerCase","getUsersApi","getMenusApi$","sort","getEmployees","who","code","company","createUser","updateUser","updated_at","now","toISOString","findUser","toLocaleLowerCase","findUserApi","checkIfUserHasRole","_user","_r","setuser","viewedusers$","_viewedusers$","setviewedusers$"],"sourceRoot":"webpack:///"}