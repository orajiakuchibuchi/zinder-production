{"version":3,"file":"src_app_auth_auth_module_ts.js","mappings":"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","sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/forgot/forgot.component.ts","./src/app/auth/forgot/forgot.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ForgotComponent } from './forgot/forgot.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path: 'forgot',\r\n    component: ForgotComponent\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ForgotComponent } from './forgot/forgot.component';\r\nimport { UserRoleModule } from '../admin/user-role/user-role.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ForgotComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    SharedModule,\r\n    UserRoleModule\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AuthModule { }\r\n","\r\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/shared/models/Index';\r\nimport { AuthService } from 'src/app/shared/services/Index';\r\n\r\n@Component({\r\n  selector: 'app-forgot',\r\n  templateUrl: './forgot.component.html',\r\n  styleUrls: ['./forgot.component.scss']\r\n})\r\nexport class ForgotComponent implements OnInit, AfterViewInit {\r\n  forgotForm: FormGroup;\r\n  message: any = '';\r\n  changed: boolean = false;\r\n  constructor(private formBuilder: FormBuilder, private auth: AuthService, private router: Router) {\r\n    this.forgotForm = this.formBuilder.group({\r\n      created_at: [new Date(Date.now()), Validators.required],\r\n      submited_at: [null, Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      email_status: ['yet', [Validators.required]],\r\n      code: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(5)]],\r\n      code_status: ['yet', [Validators.required]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmationpassword: ['', [Validators.required, Validators.minLength(6)]],\r\n      password_type: ['password', Validators.required]\r\n    });\r\n  }\r\n  ngAfterViewInit(): void {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(this.auth.sessionAuth){\r\n      this.router.navigate(['admin'])\r\n    }\r\n\r\n\r\n  }\r\n\r\n  setpassword_type(){\r\n    let status = this.password_type == 'text' ? 'password' : 'text';\r\n    this.forgotForm.controls.password_type.setValue(status);\r\n  }\r\n  get email_status(){\r\n    return this.forgotForm.controls.email_status.value;\r\n  }\r\n  get code_status(){\r\n    return this.forgotForm.controls.code_status.value;\r\n  }\r\n  get password_status(){\r\n    return this.forgotForm.controls.password.status;\r\n  }\r\n  get password_type(){\r\n    return this.forgotForm.controls.password_type.value;\r\n  }\r\n  processForEmail(){\r\n    const email = (<HTMLInputElement>document.getElementById('email'));\r\n    email.classList.remove('error-border');\r\n    email.classList.remove('no-border');\r\n    email.classList.remove('sucess-border');\r\n    if(this.forgotForm.controls.email.status == 'INVALID'){\r\n      email.classList.add('error-boarder');\r\n      this.message = 'Email is invalid';\r\n    }else{\r\n      this.forgotForm.controls.email_status.setValue('approved');\r\n    }\r\n  }\r\n  processForCode(){\r\n    const code = (<HTMLInputElement>document.getElementById('code'));\r\n    code.classList.remove('error-border');\r\n    code.classList.remove('no-border');\r\n    code.classList.remove('sucess-border');\r\n    if(this.forgotForm.controls.code.status == 'INVALID'){\r\n      code.classList.add('error-boarder');\r\n      this.message = 'Code is invalid';\r\n    }else{\r\n      this.forgotForm.controls.code_status.setValue('approved');\r\n      this.forgotForm.controls.email_status.setValue('pending code');\r\n    }\r\n  }\r\n  processForPassword(){\r\n    const password = (<HTMLInputElement>document.getElementById('password'));\r\n    password.classList.remove('error-border');\r\n    password.classList.remove('no-border');\r\n    password.classList.remove('sucess-border');\r\n    if(this.forgotForm.controls.password.status == 'INVALID'){\r\n      password.classList.add('error-boarder');\r\n      this.message = 'Password is not accepted';\r\n    }else{\r\n      const confirmationpassword = (<HTMLInputElement>document.getElementById('confirmationpassword'));\r\n      confirmationpassword.classList.remove('error-border');\r\n      confirmationpassword.classList.remove('no-border');\r\n      confirmationpassword.classList.remove('sucess-border');\r\n      if(this.forgotForm.controls.confirmationpassword.value !== this.forgotForm.controls.password.value){\r\n        confirmationpassword.classList.add('error-boarder');\r\n        this.message = 'Retyped password does not match your new password';\r\n      }else{\r\n        this.forgotForm.controls.submited_at.setValue(new Date(Date.now()));\r\n        this.changeNewPassword();\r\n      }\r\n    }\r\n  }\r\n  submit(event:any){\r\n    event.preventDefault();\r\n    this.message = '';\r\n    if(this.email_status == 'yet'){\r\n      this.processForEmail();\r\n      return;\r\n    }\r\n    if(this.email_status == 'approved'){\r\n      this.processForCode();\r\n      return;\r\n    }\r\n    if(this.code_status == 'approved'){\r\n      this.processForPassword();\r\n      return;\r\n    }\r\n  }\r\n  changeNewPassword(){\r\n    let passwordRequest = {\r\n      email: this.forgotForm.controls.email.value,\r\n      code: this.forgotForm.controls.code.value,\r\n      password: this.forgotForm.controls.password.value,\r\n      confirmationpassword: this.forgotForm.controls.confirmationpassword.value,\r\n    };\r\n\r\n    this.message = 'Password was successfully changed. You can login now';\r\n    this.changed= true;\r\n  }\r\n  resetFormStyle(){\r\n    const email = (<HTMLInputElement>document.getElementById('email'));\r\n    email.classList.remove('error-border');\r\n    email.classList.remove('no-border');\r\n    email.classList.remove('sucess-border');\r\n  }\r\n\r\n  postUserToServer():User{\r\n    let user:any = {};\r\n    Object.entries(this.forgotForm.value).forEach(\r\n      ([key, v]) => {\r\n        if(key != 'created_at' && key != 'submited_at'){\r\n          user[key] = (<string>v)\r\n        }\r\n      }\r\n    );\r\n    return user;\r\n  }\r\n\r\n  clearBrowserAutoFill(){\r\n    const password = (<HTMLInputElement>document.getElementById('password'));\r\n    const email = (<HTMLInputElement>document.getElementById('email'));\r\n    password.value = \" \".trim();\r\n    email.value = \" \".trim();\r\n  }\r\n\r\n}\r\n","<div class=\"login-header box-shadow\">\r\n    <div\r\n        class=\"container-fluid d-flex justify-content-between align-items-center\"\r\n    >\r\n        <div class=\"brand-logo\">\r\n            <a href=\"javascript:void()\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\" >\r\n                <img src=\"assets/img/zinder_1.svg\" alt=\"\" />\r\n            </a>\r\n        </div>\r\n        <div class=\"login-menu\">\r\n            <ul>\r\n                <li><a href=\"javascript:void()\" [routerLink]=\"['/auth/register']\" routerLinkActive=\"router-link-active\" >Register</a></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div\r\n    class=\"login-wrap d-flex align-items-center flex-wrap justify-content-center\"\r\n>\r\n    <div class=\"container\">\r\n      <ngx-spinner type=\"ball-scale-multiple\"></ngx-spinner>\r\n        <div class=\"row align-items-center\">\r\n            <div class=\"col-md-6 col-lg-7\">\r\n                <img src=\"assets/img/Forgot password-pana.svg\" alt=\"\" />\r\n            </div>\r\n            <div class=\"col-md-6 col-lg-5\">\r\n                <div class=\"login-box bg-white box-shadow border-radius-10\">\r\n                    <div class=\"login-title\">\r\n                        <h2 class=\"text-center text-primary\">Reset Password</h2>\r\n                    </div>\r\n                    <form [formGroup]=\"forgotForm\">\r\n                        <div class=\"input-group custom\">\r\n                            <input\r\n                                type=\"email\"\r\n                                formControlName=\"email\"\r\n                                id=\"email\"\r\n                                value=\"\"\r\n                                [attr.readonly]=\"email_status != 'yet'  ? true : null\"\r\n                                class=\"form-control form-control-lg\"\r\n                                placeholder=\"Email\"\r\n                            />\r\n                            <div class=\"input-group-append custom\">\r\n                                <span class=\"input-group-text\"\r\n                                    ><i class=\"icon-copy dw dw-user1\"></i\r\n                                ></span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"input-group custom\" *ngIf=\"email_status == 'approved'\">\r\n                            <input\r\n                                type=\"text\"\r\n                                formControlName=\"code\"\r\n                                value=\"\"\r\n                                [attr.readonly]=\"code_status != 'yet' ? true : null\"\r\n                                id=\"code\"\r\n                                class=\"form-control form-control-lg\"\r\n                                placeholder=\"Enter Code\"\r\n                            />\r\n                            <div class=\"input-group-append custom\">\r\n                                <span class=\"input-group-text\"\r\n                                    ><i class=\"dw dw-coding\"></i\r\n                                ></span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"input-group custom\" *ngIf=\"code_status == 'approved'\">\r\n                            <input\r\n                                type=\"{{password_type}}\"\r\n                                formControlName=\"password\"\r\n                                value=\"\"\r\n                                id=\"password\"\r\n                                class=\"form-control form-control-lg\"\r\n                                placeholder=\"New Password\"\r\n                            />\r\n                            <div class=\"input-group-append custom\" (click)=\"setpassword_type()\">\r\n                                <span class=\"input-group-text\"\r\n                                    ><i class=\"dw\" [ngClass]=\"{'dw-padlock1': password_type == 'password', 'dw-eye': password_type == 'text'}\"></i\r\n                                ></span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"input-group custom\" *ngIf=\"password_status == 'VALID'\">\r\n                            <input\r\n                                type=\"{{password_type}}\"\r\n                                formControlName=\"confirmationpassword\"\r\n                                value=\"\"\r\n                                id=\"confirmationpassword\"\r\n                                class=\"form-control form-control-lg\"\r\n                                placeholder=\"Retype Password\"\r\n                            />\r\n                            <div class=\"input-group-append custom\" (click)=\"setpassword_type()\">\r\n                                <span class=\"input-group-text\"\r\n                                    ><i class=\"dw\" [ngClass]=\"{'dw-padlock1': password_type == 'password', 'dw-eye': password_type == 'text'}\"></i\r\n                                ></span>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <p>{{message}}</p>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"input-group mb-0\">\r\n                                    <a *ngIf=\"!changed\"\r\n                                        class=\"btn btn-primary btn-lg btn-block\"\r\n                                        href=\"javascript:void()\" (click)=\"submit($event)\"\r\n                                        >Submit</a\r\n                                    >\r\n                                </div>\r\n                                <div *ngIf=\"!changed\"\r\n                                    class=\"font-16 weight-600 pt-10 pb-10 text-center\"\r\n                                    data-color=\"#707373\"\r\n                                >\r\n                                    OR\r\n                                </div>\r\n                                <div class=\"input-group mb-0\">\r\n                                    <a\r\n                                        class=\"btn btn-outline-primary btn-lg btn-block\"\r\n                                        href=\"javascript:void()\" [routerLink]=\"['/auth/login']\" routerLinkActive=\"router-link-active\"\r\n                                        >Login </a\r\n                                    >\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { User } from 'src/app/shared/models/Index';\r\nimport { AuthService } from 'src/app/shared/services/Index';\r\nimport { shareReplay, tap, catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { DeviceService } from 'src/app/shared/services/client/device.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ScriptsService } from 'src/app/shared/services/client/scripts.service';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  providers:[]\r\n})\r\nexport class LoginComponent implements OnInit, AfterViewInit {\r\n  loginForm: FormGroup;\r\n  user: any = null;\r\n  message: any = '';\r\n  passageAuth: string = environment.passageAppId;\r\n  appName: string = environment.appName;\r\n  constructor(private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private auth: AuthService,\r\n    private _scriptService: ScriptsService,\r\n    private _ds:DeviceService) {\r\n    this.loginForm = this.formBuilder.group({\r\n      created_at: [new Date(Date.now()), Validators.required],\r\n      submited_at: [null, Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      password_type: ['password', Validators.required],\r\n      passwordless: [false, Validators.required],\r\n    });\r\n   }\r\n   timeToSet: VoidFunction = () => setTimeout(() => {\r\n    this.clearBrowserAutoFill()\r\n    this.loginForm.controls.created_at.setValue(new Date(Date.now()));\r\n   }, 1000);\r\n  async ngAfterViewInit() {\r\n    this.timeToSet();\r\n  }\r\n\r\n  async ngOnInit() {\r\n    if(this.auth.sessionAuth){\r\n      this.router.navigate(['admin'])\r\n    }\r\n    // let ap = await this.auth.passageAppInfo();\r\n    // console.log(ap)\r\n\r\n  }\r\n\r\n  setpassword_type(){\r\n    let status = this.password_type == 'text' ? 'password' : 'text';\r\n    this.loginForm.controls.password_type.setValue(status);\r\n  }\r\n  get password_type(){\r\n    return this.loginForm.controls.password_type.value;\r\n  }\r\n  get passwordless(){\r\n    return this.loginForm.controls.passwordless.value;\r\n  }\r\n  signIn(event:any){\r\n    event.preventDefault();\r\n    this.message = '';\r\n    if(this.loginForm.controls.email.status == 'INVALID'){\r\n      this.message = 'Opps you entereed an invalid email';\r\n      this._ds.oErrorNotification('Opps, Invalid Form', this.message);\r\n      return;\r\n    }\r\n    this.loginForm.controls.submited_at.setValue(new Date(Date.now()));\r\n    if(this.passwordless){\r\n      this._ds.showSpinner();\r\n      this.auth.passageLogin(this.loginForm.controls.email.value).then(\r\n        result=>{\r\n          if(result.auth_token){\r\n            this.router.navigate([result.redirect_url]).catch(\r\n              (err)=>{\r\n                this.router.navigate(['']);\r\n                this._ds.oSuccessNotification('Authenticated', 'Welcome back to Zinder. You have been logged in.')\r\n              }\r\n            ).finally( ()=>this._ds.oSuccessNotification('Authenticated', 'Welcome back to Zinder. You have been logged in.'))\r\n          }\r\n          console.log(result)\r\n        }\r\n      ).catch(\r\n        async err=>{\r\n          console.log(JSON.stringify(err));\r\n          this.message = err.message\r\n          this._ds.oErrorNotification('Opps', err.message);\r\n          return throwError(err);\r\n        }\r\n      ).finally(\r\n        ()=>{\r\n          this._ds.hideSpinner();\r\n        }\r\n      )\r\n      return;\r\n    }\r\n    this.resetFormStyle();\r\n    const password = (<HTMLInputElement>document.getElementById('password'));\r\n    const email = (<HTMLInputElement>document.getElementById('email'));\r\n    if(this.loginForm.controls.email.status == 'INVALID'){\r\n      email.classList.add('error-border');\r\n    }else{\r\n      email.classList.add('sucess-border');\r\n    }\r\n    if(this.loginForm.controls.password.status == 'INVALID'){\r\n      password.classList.add('error-border');\r\n    }else{\r\n      password.classList.add('sucess-border');\r\n    }\r\n    if(!this.loginForm.valid){\r\n      this.loginForm.controls.submited_at.setValue(null)\r\n      return;\r\n    }\r\n    this._ds.showSpinner();\r\n\r\n    const user = this.postUserToServer();\r\n    this.user = user;\r\n    this.auth.login(this.user).pipe(\r\n      shareReplay(),\r\n      catchError((err:any)=>{\r\n        console.log(err);\r\n        this._ds.hideSpinner();\r\n        return throwError(err);\r\n      })\r\n    ).subscribe(\r\n      (res:any)=>{\r\n        this._ds.hideSpinner();\r\n\r\n        this.message = res.response;\r\n        if(res.status == '200'){\r\n          const _notificication = {\r\n            title: 'Login Successful',\r\n            message: `You have scuccessfully logged in at ${new Date(Date.now()).toLocaleString()}`,\r\n            status:'unseen',\r\n            userID: res.user.id,\r\n            created_at: new Date(Date.now()),\r\n            updated_at: new Date(Date.now()),\r\n          }\r\n          this.router.navigate(['admin/home/dashboard']).finally(\r\n            ()=>{\r\n              this._ds.add(_notificication).subscribe(\r\n\r\n              )\r\n            }\r\n          );\r\n        }\r\n\r\n      }\r\n    )\r\n  }\r\n  resetFormStyle(){\r\n    const password = (<HTMLInputElement>document.getElementById('password'));\r\n    const email = (<HTMLInputElement>document.getElementById('email'));\r\n    email.classList.remove('error-border');\r\n    password.classList.remove('error-border');\r\n    email.classList.remove('no-border');\r\n    password.classList.remove('no-border');\r\n    email.classList.remove('sucess-border');\r\n    password.classList.remove('sucess-border');\r\n  }\r\n\r\n  postUserToServer():User{\r\n    let user:any = {};\r\n    Object.entries(this.loginForm.value).forEach(\r\n      ([key, v]) => {\r\n        if(key != 'created_at' && key != 'submited_at'){\r\n          user[key] = (<string>v)\r\n        }\r\n      }\r\n    );\r\n    return user;\r\n  }\r\n\r\n  clearBrowserAutoFill(){\r\n    const password = (<HTMLInputElement>document.getElementById('password'));\r\n    const email = (<HTMLInputElement>document.getElementById('email'));\r\n    if(password){\r\n      password.value = \" \".trim();\r\n    }\r\n    if(email){\r\n      email.value = \" \".trim();\r\n    }\r\n  }\r\n  toggleChecbox(){\r\n    if(this.passwordless){\r\n      const brands = document.getElementsByClassName('passage-branding');\r\n\r\n      if(brands){\r\n        brands.item(0)?.remove();\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\n","<div class=\"login-header box-shadow\">\r\n    <div\r\n        class=\"container-fluid d-flex justify-content-between align-items-center\"\r\n    >\r\n        <div class=\"brand-logo\">\r\n            <a href=\"javascript:void()\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\" >\r\n                <img src=\"assets/img/zinder_1.svg\" alt=\"\" />\r\n            </a>\r\n        </div>\r\n        <div class=\"login-menu\">\r\n            <ul>\r\n                <li><a href=\"javascript:void()\" [routerLink]=\"['/auth/register']\" routerLinkActive=\"router-link-active\" >Join Today</a></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div\r\n    class=\"login-wrap d-flex align-items-center flex-wrap justify-content-center\"\r\n>\r\n    <div class=\"container\">\r\n      <ngx-spinner type=\"ball-scale-multiple\"></ngx-spinner>\r\n        <div class=\"row align-items-center\">\r\n            <div class=\"col-md-6 col-lg-7\">\r\n                <img src=\"assets/img/mobile_login.svg\" alt=\"\" />\r\n            </div>\r\n            <div class=\"col-md-6 col-lg-5\">\r\n                <div class=\"login-box bg-white box-shadow border-radius-10\">\r\n                    <div class=\"login-title\">\r\n                        <h2 class=\"text-center text-primary\">{{appName}} Account</h2>\r\n                    </div>\r\n                    <form [formGroup]=\"loginForm\">\r\n                        <!-- <div class=\"input-group custom\" >\r\n                            <input\r\n                                type=\"email\"\r\n                                formControlName=\"email\"\r\n                                id=\"email\"\r\n                                value=\"\"\r\n                                class=\"form-control form-control-lg\"\r\n                                placeholder=\"Email\"\r\n                            />\r\n                            <div class=\"input-group-append custom\">\r\n                                <span class=\"input-group-text\"\r\n                                    ><i class=\"icon-copy dw dw-user1\"></i\r\n                                ></span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"input-group custom\" *ngIf=\"!passwordless\">\r\n                            <input\r\n                                type=\"{{password_type}}\"\r\n                                formControlName=\"password\"\r\n                                value=\"\"\r\n                                id=\"password\"\r\n                                class=\"form-control form-control-lg\"\r\n                                placeholder=\"Enter Password\"\r\n                            />\r\n                            <div class=\"input-group-append custom\" (click)=\"setpassword_type()\">\r\n                                <span class=\"input-group-text\"\r\n                                    ><i class=\"dw\" [ngClass]=\"{'dw-padlock1': password_type == 'password', 'dw-eye': password_type == 'text'}\"></i\r\n                                ></span>\r\n                            </div>\r\n                        </div>\r\n                        <div >\r\n                            <p>{{message}}</p>\r\n                        </div> -->\r\n                        <!-- <div class=\"row pb-30\" >\r\n                            <div class=\"col-6\">\r\n                                <div class=\"custom-control custom-checkbox\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        formControlName=\"passwordless\"\r\n                                        name=\"passwordless\"\r\n                                        class=\"custom-control-input\"\r\n                                        (click)=\"toggleChecbox()\"\r\n                                        id=\"customCheck1\"\r\n                                    />\r\n                                    <label class=\"custom-control-label\" for=\"customCheck1\"\r\n                                        >{{!passwordless ? 'Without Password' : 'Using Password'}}</label\r\n                                    >\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"forgot-password\">\r\n                                    <a  href=\"javascript:void()\" class=\"text-primary\" [routerLink]=\"['/auth/forgot']\" routerLinkActive=\"router-link-active\">Forgot Password</a>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n                        <!-- <div class=\"row\" >\r\n                            <div class=\"col-sm-12 pb-10 pt-10\">\r\n                                <div class=\"input-group mb-0\">\r\n                                    <a\r\n                                        class=\"btn btn-primary btn-lg btn-block\"\r\n                                        href=\"javascript:void()\" (click)=\"signIn($event)\"\r\n                                        >Sign In</a\r\n                                    >\r\n                                </div>\r\n                                <div\r\n                                    class=\"font-16 weight-600 pt-10 pb-10 text-center\"\r\n                                    data-color=\"#707373\"\r\n                                >\r\n                                    OR\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6 pb-10\">\r\n                              <div class=\"custom-control custom-checkbox\">\r\n                                  <input\r\n                                      type=\"checkbox\"\r\n                                      formControlName=\"passwordless\"\r\n                                      name=\"passwordless\"\r\n                                      class=\"custom-control-input\"\r\n                                      (click)=\"toggleChecbox()\"\r\n                                      id=\"customCheck1\"\r\n                                  />\r\n                                  <label class=\"custom-control-label\" for=\"customCheck1\"\r\n                                      >{{passwordless ? 'Use Password' : 'Forgot Password'}}</label\r\n                                  >\r\n                              </div>\r\n                          </div>\r\n                          <div class=\"col-6 pb-10\">\r\n                              <div class=\"forgot-password\">\r\n                                  <a  href=\"javascript:void()\" class=\"text-primary\" [routerLink]=\"['/auth/forgot']\" routerLinkActive=\"router-link-active\">Forgot Password</a>\r\n                              </div>\r\n                          </div>\r\n                        </div> -->\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <passage-auth [appId]=\"passageAuth\"></passage-auth>\r\n                            </div>\r\n                            <!-- <div class=\"col-md-6 text-center\">\r\n                                <div class=\"custom-control custom-checkbox\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        formControlName=\"passwordless\"\r\n                                        name=\"passwordless\"\r\n                                        (click)=\"toggleChecbox()\"\r\n                                        class=\"custom-control-input\"\r\n                                        id=\"customCheck1\"\r\n                                    />\r\n                                    <label class=\"custom-control-label\" for=\"customCheck1\"\r\n                                        >{{'Signin With Password'}}</label\r\n                                    >\r\n                                </div>\r\n                            </div> -->\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/shared/services/Index';\r\nimport { map, tap,catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { ScriptsService } from 'src/app/shared/services/client/scripts.service';\r\nimport { DeviceService } from 'src/app/shared/services/client/device.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  firstFormGroup = this._formBuilder.group({\r\n    firstName: ['', Validators.required],\r\n    lastName: ['', Validators.required],\r\n    country: ['', Validators.required],\r\n    phone: ['', Validators.required],\r\n  });\r\n  secondFormGroup = this._formBuilder.group({\r\n    email: ['', [Validators.required, Validators.email]],\r\n    password: ['', [Validators.required, Validators.minLength(6)]],\r\n  });\r\n  isLinear = true;\r\n  filterByRole: string = 'Admin';\r\n  saved = false;\r\n  message = '';\r\n  url = '';\r\n  passageAuth: string = environment.passageAppId;\r\n  appName: string = environment.appName;\r\n  constructor(private _formBuilder: FormBuilder,\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private deviceService: DeviceService,\r\n    private scriptService: ScriptsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.url = this.router.url;\r\n    // if(this.auth.sessionAuth){\r\n    //   this.router.navigate(['admin'])\r\n    // }\r\n\r\n  }\r\n  saveCompleted(event: any) {\r\n\r\n  }\r\n  get firstControls(){\r\n    return this.firstFormGroup.controls;\r\n  }\r\n  get secondControls(){\r\n    return this.secondFormGroup.controls;\r\n  }\r\n  submit(){\r\n    let user =  {\r\n      \"who\": \"GUEST\",\r\n      \"firstName\": this.firstControls.firstName.value.trim(),\r\n      \"lastName\": this.firstControls.lastName.value.trim(),\r\n      \"country\": this.firstControls.country.value.trim(),\r\n      \"phone\": this.firstControls.phone.value,\r\n      \"email\": this.secondControls.email.value.trim(),\r\n      \"code\": `ZU-${this.scriptService.generateRandomAlphanumeric(5)}`,\r\n      \"password\": this.secondControls.password.value.trim(),\r\n      \"role\": [\r\n        \"Admin\"\r\n      ],\r\n      created_at: new Date(Date.now()).toISOString(),\r\n      updated_at: new Date(Date.now()).toISOString(),\r\n      \"status\": \"Active\"\r\n    };\r\n    this.deviceService.showSpinner();\r\n    this.auth.register(user)\r\n    .pipe(\r\n      catchError(e=>this.handleError(e.response)),\r\n      map(data=>data),\r\n      tap(()=>this.saved = true)\r\n    )\r\n    .subscribe(\r\n      (res:any)=>{\r\n        this.deviceService.showSpinner();\r\n        this.deviceService.oSuccessNotification('Account Created', this.message);\r\n        this.message = res.response;\r\n        this.deviceService.hideSpinner()\r\n      }\r\n    )\r\n  }\r\n  handleError(error:string){\r\n    this.deviceService.showSpinner();\r\n    this.deviceService.oErrorNotification('Opps', error);\r\n    console.log(error);\r\n    this.deviceService.hideSpinner();\r\n    return throwError(error)\r\n  }\r\n  loginnow(){\r\n    this.router.navigate(['auth/login'])\r\n  }\r\n\r\n}\r\n","<div class=\"login-header box-shadow\">\r\n    <div class=\"container-fluid d-flex justify-content-between align-items-center\">\r\n        <div class=\"brand-logo\">\r\n            <a href=\"javascript:void()\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\">\r\n                <img src=\"assets/img/zinder_1.svg\" alt=\"\" />\r\n            </a>\r\n        </div>\r\n        <div class=\"login-menu\">\r\n            <ul>\r\n                <li><a href=\"javascript:void()\" [routerLink]=\"['/auth/login']\"\r\n                        routerLinkActive=\"router-link-active\">Login</a></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"login-wrap d-flex align-items-center flex-wrap justify-content-center\">\r\n    <div class=\"container\">\r\n      <ngx-spinner type=\"ball-scale-multiple\"></ngx-spinner>\r\n        <div class=\"row align-items-center\">\r\n            <div class=\"col-md-6 col-lg-6\">\r\n                <img src=\"assets/img/register-company.gif\" alt=\"\" />\r\n            </div>\r\n            <div class=\"col-md-6 col-lg-6\">\r\n                <div class=\"login-box bg-white box-shadow border-radius-10 organisetihis\">\r\n                    <div class=\"login-title\">\r\n                        <h2 class=\"text-center text-primary\">{{appName}} Account</h2>\r\n                    </div>\r\n                    <!-- <div class=\"col-md-12\">\r\n                        <passage-auth [appId]=\"passageAuth\"></passage-auth>\r\n                    </div> -->\r\n                    <mat-stepper [linear]=\"isLinear\" #stepper [style.background-color]=\"'#021645'\">\r\n                        <mat-step [stepControl]=\"firstFormGroup\">\r\n                            <form [formGroup]=\"firstFormGroup\">\r\n                                <ng-template matStepLabel class=\"text-white\">Personal Info</ng-template>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12\">\r\n\r\n                                        <mat-form-field>\r\n                                            <mat-label class=\"text-white\">First Name</mat-label>\r\n                                            <input class=\"text-white\" matInput placeholder=\"First name\"\r\n                                                formControlName=\"firstName\" required>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-md-12\">\r\n\r\n                                        <mat-form-field>\r\n                                            <mat-label class=\"text-white\">Last Name</mat-label>\r\n                                            <input class=\"text-white\" matInput placeholder=\"Last name\"\r\n                                                formControlName=\"lastName\" required>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-md-12\">\r\n\r\n                                        <mat-form-field>\r\n                                            <mat-label class=\"text-white\">Country</mat-label>\r\n                                            <input class=\"text-white\" matInput placeholder=\"Country\"\r\n                                                formControlName=\"country\" required>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-md-12\">\r\n                                        <mat-form-field>\r\n                                            <mat-label class=\"text-white\">Phone</mat-label>\r\n                                            <input class=\"text-white\" matInput placeholder=\"Phone\"\r\n                                                formControlName=\"phone\" required>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <button mat-button matStepperNext class=\"text-white btn\">Next</button>\r\n                                </div>\r\n                            </form>\r\n                        </mat-step>\r\n                        <mat-step [stepControl]=\"secondFormGroup\" label=\"Login Information\">\r\n                            <form [formGroup]=\"secondFormGroup\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-12\">\r\n                                        <mat-form-field>\r\n                                            <mat-label class=\"text-white\">Email</mat-label>\r\n                                            <input class=\"text-white\" matInput formControlName=\"email\"\r\n                                                placeholder=\"Email\" type=\"email\" required>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-12\">\r\n\r\n                                        <mat-form-field>\r\n                                            <mat-label class=\"text-white\">Password</mat-label>\r\n                                            <input class=\"text-white\" matInput formControlName=\"password\"\r\n                                                placeholder=\"Password\" type=\"password\" required>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <button mat-button matStepperPrevious class=\"text-white btn spacel\">Back</button>\r\n                                    <button mat-button matStepperNext class=\"text-white btn\">Next</button>\r\n                                </div>\r\n                            </form>\r\n                        </mat-step>\r\n                        <mat-step>\r\n                            <ng-template matStepLabel class=\"text-white\">Account Information</ng-template>\r\n                            <div *ngIf=\"!saved\">\r\n                                <p class=\"text-white\">You are almsot now done.</p>\r\n                                <p class=\"text-white\">Firstname: {{firstControls.firstName.value}}</p>\r\n                                <p class=\"text-white\">Lastname: {{firstControls.lastName.value}}</p>\r\n                                <p class=\"text-white\">Country: {{firstControls.country.value}}</p>\r\n                                <p class=\"text-white\">Phone: {{firstControls.phone.value}}</p>\r\n                                <p class=\"text-white\">Email: {{secondControls.email.value}}</p>\r\n                                <p class=\"text-white\">Password: {{secondControls.password.value}}</p>\r\n                            </div>\r\n                            <div *ngIf=\"saved\">\r\n                                <p class=\"text-white mb-10\">{{message}}</p>\r\n                                <p class=\"text-white font-12 mb-10\">One step to go, Re-enter info one more time.</p>\r\n                                <div class=\"col-md-12\">\r\n                                  <passage-register [appId]=\"passageAuth\"></passage-register>\r\n                              </div>\r\n                            </div>\r\n                            <div>\r\n                                <button mat-button matStepperPrevious class=\"text-white btn spacel\" *ngIf=\"!saved\">Back</button>\r\n                                <!-- <button mat-button matStepperPrevious class=\"text-white btn spacel\" (click)=\"loginnow()\" *ngIf=\"saved\">Login</button> -->\r\n                                <button mat-button class=\"text-white btn\" [style.background-color]=\"'#009b72'\" *ngIf=\"!saved\" (click)=\"submit()\">Submit</button>\r\n                            </div>\r\n                        </mat-step>\r\n                    </mat-stepper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"],"names":["Validators","shareReplay","catchError","environment","throwError","LoginComponent","constructor","formBuilder","router","auth","_scriptService","_ds","passageAppId","appName","setTimeout","clearBrowserAutoFill","loginForm","controls","created_at","setValue","Date","now","group","required","submited_at","email","password","minLength","password_type","passwordless","ngAfterViewInit","timeToSet","ngOnInit","sessionAuth","navigate","setpassword_type","status","value","signIn","event","preventDefault","message","oErrorNotification","showSpinner","passageLogin","then","result","auth_token","redirect_url","catch","err","oSuccessNotification","finally","console","log","JSON","stringify","hideSpinner","resetFormStyle","document","getElementById","classList","add","valid","user","postUserToServer","login","pipe","subscribe","res","response","_notificication","title","toLocaleString","userID","id","updated_at","remove","Object","entries","forEach","key","v","trim","toggleChecbox","brands","getElementsByClassName","item","_a","i0","selectors","features","decls","vars","consts","template"],"sourceRoot":"webpack:///"}